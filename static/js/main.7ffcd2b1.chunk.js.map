{"version":3,"sources":["components/Evolution/play.svg","components/Evolution/SpeechToText/SpeechToText.js","components/Evolution/SpeechToText/aws-signature-v4.js","logo.png","components/AppliedRoute/AppliedRoute.js","components/MemberRouter/MemberRoute.js","components/AuthenticatedRoute/AuthenticatedRoute.js","components/UnauthenticatedRoute/UnauthenticatedRoute.js","containers/Home/Home.js","containers/About/About.js","containers/Contact/Contact.js","components/LoaderButton/LoaderButton.js","containers/Register/Register.js","containers/Login/Login.js","containers/Demo/Demo.js","containers/Profile/Billing/BillingForm/BillingForm.js","config.js","containers/Profile/Billing/Billing.js","utils/formatNumbers.js","containers/Profile/Profile.js","axios.js","containers/Dashboard/Dashboard.js","components/Evolution/TextCanvas/TextCanvas.js","components/Evolution/ProcessSpeech/ProcessSpeech.js","components/Evolution/TextToSpeech/TextToSpeech.js","components/Evolution/Evaluation/Evaluation.js","components/Evolution/Evolution.js","components/Evolution/Education/Education.js","containers/NotFound/NotFound.js","Routes.js","containers/App/Navigation/Navigation.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","require","config","eventStreamMarshaller","EventStreamMarshaller","toUtf8","fromUtf8","SpeechToText","state","response","recording","micStream","buffer","transcription","socket","socketError","transcribeException","streamAudioToWebSocket","userMediaStream","a","mic","setStream","setState","createPresignedUrl","url","WebSocket","binaryType","console","log","onopen","on","rawAudioChunk","convertAudioToBinaryMessage","binary","OPEN","send","wireSocketEvents","getAudioEventMessage","headers","type","value","body","handleEventStreamMessage","messageJson","this","results","Transcript","Results","length","Alternatives","transcript","decodeURIComponent","escape","IsPartial","closeSocket","stop","Buffer","from","emptyMessage","emptyBuffer","marshall","err","setTimeout","prevProps","isRecording","props","endRecording","processRecording","startRecording","stopRecording","window","navigator","mediaDevices","getUserMedia","video","audio","then","stream","catch","error","v5","v4","createPresignedURL","crypto","createHash","update","digest","key","process","secret","protocol","expires","region","query","audioChunk","raw","toRaw","downsampleBuffer","downsampledBuffer","pcmEncode","pcmEncodedBuffer","audioEventMessage","outputSampleRate","inputSampleRate","sampleRateRatio","newLength","Math","round","result","Float32Array","offsetResult","offsetBuffer","nextOffsetBuffer","accum","count","i","input","offset","ArrayBuffer","view","DataView","s","max","min","setInt16","onmessage","message","messageWrapper","unmarshall","data","messageBody","JSON","parse","String","fromCharCode","apply","Message","onerror","onclose","closeEvent","handleListenComplete","code","reason","className","Component","createCanonicalRequest","method","pathname","payload","toUpperCase","createCanonicalQueryString","createCanonicalHeaders","createSignedHeaders","join","params","Object","keys","sort","map","encodeURIComponent","name","toLowerCase","trim","toString","createCredentialScope","time","service","toDate","createStringToSign","request","toTime","hash","createSignature","stringToSign","h1","hmac","h2","h3","h4","createPresignedS3URL","options","bucket","AWS_S3_BUCKET","host","path","AWS_ACCESS_KEY_ID","AWS_SECRET_ACCESS_KEY","timestamp","Date","now","AWS_REGION","Host","querystring","sessionToken","canonicalRequest","signature","stringify","toISOString","replace","substring","string","encoding","createHmac","C","component","cProps","rest","Route","render","memberType","Redirect","to","location","search","isAuthenticated","redirect","href","RegExp","exec","Home","About","Contact","isLoading","text","loadingText","disabled","Button","Spinner","as","animation","size","role","aria-hidden","Register","email","password","confirmPassword","confirmationCode","newUser","alertError","handleChange","event","target","id","handleSubmit","preventDefault","Auth","signUp","username","handleConfirmationSubmit","confirmSignUp","signIn","userHasAuthenticated","history","push","handleDismissAlert","Form","onSubmit","Group","controlId","Label","Control","autoFocus","onChange","Text","variant","validateConfirmationForm","autoComplete","validateForm","Alert","onClose","dismissible","Heading","Row","Col","md","span","renderAlert","renderForm","renderConfirmationForm","Login","BillingForm","isProcessing","isCardComplete","handleFieldChange","handleCardFieldChange","complete","handleSubmitClick","stripe","createToken","token","loading","placeholder","style","base","fontSize","fontFamily","injectStripe","REGION","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","PROXY","DEFAULT_VOICE_ID","LANGUAGE_CODE","TYPE","Billing","isLoadingProducts","products","plans","subscription","alertHeading","alertVariant","alertMessage","alertRedirect","alertRedirectMessage","showAlert","showCancelSubscriptionAlert","handleFormSubmit","createCustomer","source","customer","createSubscription","customerId","planId","getSubscription","setMemberType","handleCancelSubscriptionConfirmation","handleDismissCancelSubscriptionAlert","handleCancelSubscription","isCanceling","cancelSubscription","handleAlertRedirect","getProducts","getPlans","currentSession","session","idToken","API","get","details","post","subscriptionId","onClick","Card","renderCancelSubscriptionAlert","width","plan","Body","Title","Subtitle","stripeAmount","amount","toFixed","interval","canceled","renderNextBill","apiKey","Profile","isLoadingAlarms","isUpdating","alarms","alarm1","alarm2","alarm3","dispatchCenter","updateAlarms","createAlarms","handleUpdateRequest","getAlarms","put","ListGroup","Item","renderAlarms","instance","axios","create","baseURL","Dashboard","evolutions","evoList","textAlign","match","evolution","index","viewLink","pk","street","category","Link","TextCanvas","lines","currentYLocation","endingYLocation","isFinished","textCanvas","React","createRef","padding","leading","font","textColor","outlineColor","rate","textToLines","animateId","cancelAnimationFrame","canvas","current","ctx","getContext","isArray","height","forEach","phrase","words","split","line","space","word","shift","measureText","unshift","animate","handleCallback","requestAnimationFrame","finishAnimate","drawText","clearRect","fillStyle","strokeStyle","currentLineX","currentLineY","floor","fillText","strokeText","ref","ProcessSpeech","userSpeechChanged","alarm2KeywordDictionary","fireAttackDictionary","exposureGroupDictionary","ventGroupDictionary","rickGroupDictionary","assignKeywordDictionary","parKeywordDictionary","processTranscript","childProps","initialReportComplete","threeSixtyComplete","arrivalsComplete","commandingUnitComplete","step4Index","commandingUnitReport","decisionOnSpeech","processThreeSixtyAssessment","processInitialReport","handleSpeak","processInitialEvaluation","updates","initialSpeech","handleProcessSpeechComplete","initialMatched","slicerMatched","rectoMatched","undefined","initialDictionary","elem","item","re","matched","matchKeyword","handleEvaluationComplete","processThreeSixtyEvaluation","secondarySpeech","startArrival","secondaryMatched","secondaryDictionary","commandingUnitEvaluation","commandingUnitMatched","incidentCommander","includes","texts","foundAny","includesText","foundAll","userSpeech","secondAlarm","callingUnits","groups","dir","assignKeyword","parDetected","nameIndex","simpleAssignment","goAssignment","assignKeywordFound","checkUserSpeech","groupMatching","voice","incidentWithinIncident","assignmentCheck","alarmTwoIncident","found","indexOf","keyWordLength","indexOfKeyword","indexofGroup","countKeywords","sub","assigned","groupAssignment","obj","assigned_to","index2","giveResponse","changeKeywords","wait","parSpeech","newStep4Index","mapObj","changeSpeech","groupDictionary","groupId","processArrivalMatched","evaluationUpdate","group","TextToSpeech","textToGenerateSpeech","phrases","Array","generateTextToSpeech","voiceId","Predictions","convert","textToSpeech","audioCtx","AudioContext","webkitAudioContext","createBufferSource","decodeAudioData","audioStream","connect","destination","start","handleSpeechComplete","duration","visibility","Evaluation","totalScore","parSpeechKeyword","parSpeechScore","initialKeywords","initialScore","secondaryKeywords","secondaryScore","slicerKeywords","slicerScore","rectoKeywords","rectoScore","processArrivalKeywords","processArrivalScore","commandingUnitKeyword","commandingUnitScore","Evolution","isLoadingEvolution","firstAlarm","chief","videos","timerId","isPlaying","preloadedVideoCount","currentVideo","scrollText","speakPhrases","speakVoice","speakTimeout","step","recognition","speechRecognitionResult","isSpeaking","canTalk","videosLoaded","preloadPercentage","dispatchInfoComplete","assignmentsComplete","faceToFaceRequestComplete","faceToFaceComplete","commandingUnitRequest","educationRequest","educationComplete","evaluationComplete","flag","initialCheck","finalJsonOutput","finalJsonOutputIndex","step4Speak","isEvaluation","incidentReportRequest","evaluationPage","assignRandomVoices","random","getVideos","src","intro","next","approach","loop","bravo","charlie","delta","alpha","preloadVideos","handlePlay","loadVideo","handleEnded","setDispatchText","stopTimer","play","handleLoadedData","drawImage","handlePlayClicked","canvasContainer","requestFullScreen","webkitRequestFullScreen","moRequestFullScreen","mozRequestFullScreen","handleDispatchLoopComplete","dispatchLoop","pause","handleAlphaLoopComplete","alphaLoop","credits","timeout","newStep","processArrivals","faceToFace","setEducationText","handleListenResponse","handleKeyDown","repeat","handleKeyUp","videoCanvas","dispatch","alphaIntro","fps","getEvolution","setupAlarms","loadVariables","setupIncidentCommander","alert","document","addEventListener","bind","groupNames","element","alarm","pop","shuffleFirstAlarm","j","preloadVideo","vidRef","fetch","mode","blob","videoBlob","videoObject","createObjectURL","updateVideosLoaded","newVideosLoaded","clearInterval","setInterval","calls","rand","speakPhrase","occupancyType","witnessedConditions","construction","entryEgress","survivabilityProfile","fireType","exhaustPath","flowpath","smoke","education","educationPhrase","processSpeechChildProps","onPlay","onEnded","onLoadedData","hidden","playButton","alt","ProgressBar","striped","animated","Switch","AppliedRoute","exact","UnauthenticatedRoute","AuthenticatedRoute","Demo","MemberRoute","NotFound","Navigation","Navbar","bg","collapseOnSelect","sticky","Brand","logo","Toggle","aria-controls","Collapse","Nav","handleLogout","App","_isMounted","isAuthenticating","authenticated","signOut","getBilling","billing","Container","Routes","withRouter","Boolean","hostname","Amplify","configure","mandatorySignIn","identityPoolId","userPoolId","userPoolWebClientId","predictions","speechGenerator","proxy","defaults","VoiceId","LanguageCode","language","interpret","interpretText","endpoints","endpoint","addPluggable","AmazonAIPredictionsProvider","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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,MAAM+X,WAAWc,4BAA4BF,K,+CAG3B1Z,GAAa,IAAD,EACmBN,KAAKqB,MAAM+X,WAA3De,EAD6B,EAC7BA,eAAgBC,EADa,EACbA,cAAeC,EADF,EACEA,aAMrC,GAJAF,EAAiBA,EAAeA,eAChCC,EAAgBA,EAAcA,cAC9BC,EAAeA,EAAaA,kBAETC,IAAfha,EAA0B,CAC5B,IAAIia,EAAoB,GACxBA,EAAkB,GAAK,CACrB,QACA,QACA,SACA,QACA,cACA,OACA,cACA,wBAEFA,EAAkB,GAAK,CACrB,eACA,gBACA,UACA,YACA,YACA,aACA,eACA,eACA,gBACA,cACA,cACA,eACA,UACA,WACA,YACA,aAEFA,EAAkB,GAAK,CACrB,cACA,yBACA,yBACA,kBACA,wBACA,mBACA,iBACA,WACA,YACA,cACA,SACA,kBACA,YACA,iBACA,SACA,YACA,QACA,yBACA,WACA,cACA,aACA,SACA,WACA,QACA,cACA,aACA,iBACA,YACA,SACA,OACA,UAEFA,EAAkB,GAAK,CACrB,QACA,gBACA,eACA,yBACA,kBACA,OACA,WAEFA,EAAkB,GAAK,CACrB,uBACA,4BACA,2BACA,eACA,UACA,gBACA,eACA,eACA,gBACA,UACA,SACA,gBAEFA,EAAkB,GAAK,CACrB,eACA,cACA,SACA,KACA,YACA,eACA,YACA,SACA,YACA,MACA,YAEFA,EAAkB,GAAK,CACrB,sBACA,uBACA,iBACA,wBACA,eACA,iEACA,+BAEFA,EAAkB,GAAK,CACrB,oCACA,cACA,wBACA,6BACA,kBACA,wBACA,cACA,MACA,mBACA,sBACA,oBAkBFA,EAAkBrD,SAAQ,SAACsD,EAAMnF,GAC/BmF,EAAKtD,SAAQ,SAAAuD,GACX,IAAIC,EAAK,IAAI7P,OAAO4P,EAAM,MACtBna,EAAW6U,MAAMuF,KACnBP,EAAe9E,GAAOsF,QAAU,EAChCR,EAAe9E,GAAOuF,aAAeH,SArBlB,CAAC,SAAU,UAoCnBvD,SAAQ,SAAAuD,GACvB,IAAIC,EAAK,IAAI7P,OAAO4P,EAAM,MACtBna,EAAW6U,MAAMuF,KACnBN,EAAc,GAA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","file":"static/js/main.7ffcd2b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.7c1d6adf.svg\";","import React, { Component } from 'react';\nimport mic from 'microphone-stream';\nimport v4 from './aws-signature-v4';\nimport { EventStreamMarshaller } from '@aws-sdk/eventstream-marshaller';\nimport { fromUtf8, toUtf8 } from '@aws-sdk/util-utf8-node';\nimport crypto from 'crypto';\nrequire('dotenv').config();\n\nconst eventStreamMarshaller = new EventStreamMarshaller(toUtf8, fromUtf8);\n\nexport default class SpeechToText extends Component {\n  state = {\n    response: '',\n    recording: false,\n    micStream: null,\n    buffer: [],\n    transcription: '',\n    socket: null,\n    socketError: false,\n    transcribeException: false\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.isRecording !== this.props.isRecording ||\n      prevProps.endRecording !== this.props.endRecording\n    ) {\n      console.log('SpeechToText()');\n      this.processRecording();\n    }\n  }\n\n  processRecording() {\n    const { isRecording, endRecording } = this.props;\n    if (isRecording && !endRecording) {\n      this.startRecording();\n    }\n    if (isRecording && endRecording) {\n      this.stopRecording();\n    }\n  }\n\n  async startRecording() {\n    // first we get the microphone input from the browser (as a promise)...\n    this.setState({ response: '' });\n    window.navigator.mediaDevices\n      .getUserMedia({\n        video: false,\n        audio: true\n      })\n      // ...then we convert the mic stream to binary event stream messages when the promise resolves\n      .then(async stream => {\n        await this.streamAudioToWebSocket(stream);\n      })\n      .catch(function(error) {\n        console.log(\n          'There was an error streaming your audio to Amazon Transcribe. Please try again.'\n        );\n      });\n  }\n\n  async stopRecording() {\n    this.setState({ recording: false });\n    this.closeSocket();\n  }\n\n  streamAudioToWebSocket = async userMediaStream => {\n    let { micStream, socket } = this.state;\n    micStream = new mic();\n    micStream.setStream(userMediaStream);\n    this.setState({ micStream: micStream });\n    let url = await this.createPresignedUrl();\n    socket = new WebSocket(url);\n    socket.binaryType = 'arraybuffer';\n    this.setState({ socket: socket });\n    console.log('Socket Opened');\n    socket.onopen = () => {\n      micStream.on('data', async rawAudioChunk => {\n        let binary = await this.convertAudioToBinaryMessage(rawAudioChunk);\n        if (socket.OPEN) {\n          socket.send(binary);\n          this.setState({ socket: socket });\n        }\n      });\n    };\n    // handle messages, errors, and close events\n    this.wireSocketEvents();\n  };\n\n  async createPresignedUrl() {\n    let v5 = new v4();\n    let endpoint = 'transcribestreaming.us-west-2.amazonaws.com:8443';\n    return await v5.createPresignedURL(\n      'GET',\n      endpoint,\n      '/stream-transcription-websocket',\n      'transcribe',\n      crypto\n        .createHash('sha256')\n        .update('', 'utf8')\n        .digest('hex'),\n      {\n        key: process.env.REACT_APP_ACCESS_ID,\n        secret: process.env.REACT_APP_SECRET_KEY,\n        protocol: 'wss',\n        expires: 15,\n        region: 'us-west-2',\n        query: 'language-code=en-US&media-encoding=pcm&sample-rate=44100'\n      }\n    );\n  }\n\n  async convertAudioToBinaryMessage(audioChunk) {\n    let raw = mic.toRaw(audioChunk);\n    if (raw == null) return;\n    // downsample and convert the raw audio bytes to PCM\n    let downsampledBuffer = await this.downsampleBuffer(raw, 44100);\n    let pcmEncodedBuffer = await this.pcmEncode(downsampledBuffer);\n    // add the right JSON headers and structure to the message\n    let audioEventMessage = await this.getAudioEventMessage(\n      Buffer.from(pcmEncodedBuffer)\n    );\n    //convert the JSON object + headers into a binary event stream message\n    let binary = eventStreamMarshaller.marshall(audioEventMessage);\n    return binary;\n  }\n\n  downsampleBuffer(buffer, outputSampleRate = 16000) {\n    var inputSampleRate = 44100;\n    if (outputSampleRate === inputSampleRate) {\n      return buffer;\n    }\n    var sampleRateRatio = inputSampleRate / outputSampleRate;\n    var newLength = Math.round(buffer.length / sampleRateRatio);\n    var result = new Float32Array(newLength);\n    var offsetResult = 0;\n    var offsetBuffer = 0;\n    while (offsetResult < result.length) {\n      var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n      var accum = 0,\n        count = 0;\n      for (\n        var i = offsetBuffer;\n        i < nextOffsetBuffer && i < buffer.length;\n        i++\n      ) {\n        accum += buffer[i];\n        count++;\n      }\n      result[offsetResult] = accum / count;\n      offsetResult++;\n      offsetBuffer = nextOffsetBuffer;\n    }\n    return result;\n  }\n\n  async pcmEncode(input) {\n    var offset = 0;\n    var buffer = new ArrayBuffer(input.length * 2);\n    var view = new DataView(buffer);\n    for (var i = 0; i < input.length; i++, offset += 2) {\n      var s = Math.max(-1, Math.min(1, input[i]));\n      view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n    }\n    return buffer;\n  }\n\n  getAudioEventMessage = async buffer => {\n    return {\n      headers: {\n        ':message-type': {\n          type: 'string',\n          value: 'event'\n        },\n        ':event-type': {\n          type: 'string',\n          value: 'AudioEvent'\n        }\n      },\n      body: buffer\n    };\n  };\n\n  wireSocketEvents() {\n    let { socket, micStream, transcribeException, socketError } = this.state;\n    // handle inbound messages from Amazon Transcribe\n    socket.onmessage = message => {\n      //convert the binary event stream message to JSON\n      let messageWrapper = eventStreamMarshaller.unmarshall(\n        Buffer(message.data)\n      );\n      let messageBody = JSON.parse(\n        String.fromCharCode.apply(String, messageWrapper.body)\n      );\n      if (messageWrapper.headers[':message-type'].value === 'event') {\n        this.handleEventStreamMessage(messageBody);\n      } else {\n        transcribeException = true;\n        this.setState({ transcribeException: transcribeException });\n        console.log(messageBody.Message);\n      }\n    };\n\n    socket.onerror = function() {\n      socketError = true;\n      this.setState({ socketError: socketError });\n      console.log('WebSocket connection error. Try again.');\n    };\n\n    socket.onclose = closeEvent => {\n      console.log('Socket Closed');\n      micStream.stop();\n      this.props.handleListenComplete(this.state.response);\n\n      // the close event immediately follows the error event; only handle one.\n      if (!socketError && !transcribeException) {\n        if (closeEvent.code !== 1000) {\n          console.log('Streaming Exception : ' + closeEvent.reason);\n        }\n      }\n    };\n  }\n\n  handleEventStreamMessage = function(messageJson) {\n    let { response } = this.state;\n    let results = messageJson.Transcript.Results;\n\n    if (results.length > 0) {\n      if (results[0].Alternatives.length > 0) {\n        let transcript = results[0].Alternatives[0].Transcript;\n        // fix encoding for accented characters\n        transcript = decodeURIComponent(escape(transcript));\n        if (!results[0].IsPartial) {\n          response = response + transcript;\n          this.setState({ response: response });\n        }\n      }\n    }\n  };\n\n  closeSocket = async () => {\n    let { socket, micStream } = this.state;\n    if (socket.OPEN) {\n      micStream.stop();\n      // Send an empty frame so that Transcribe initiates a closure of the WebSocket after submitting all transcripts\n      let emptyMessage = await this.getAudioEventMessage(\n        Buffer.from(new Buffer([]))\n      );\n      let emptyBuffer = eventStreamMarshaller.marshall(emptyMessage);\n      try {\n        socket.send(emptyBuffer);\n      } catch (err) {\n        console.log('Inside catch');\n        setTimeout(() => {\n          socket.send(emptyBuffer);\n        }, 1000);\n      }\n    }\n    this.setState({ socket: socket, micStream: null });\n  };\n\n  showError(message) {\n    console.log(message);\n  }\n\n  render() {\n    const { response } = this.state;\n    return (\n      <div className='SpeechToText'>\n        <p>{response}</p>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport crypto from 'crypto';\nimport querystring from 'query-string';\n\nexport default class v4 extends Component {\n  createCanonicalRequest = function(method, pathname, query, headers, payload) {\n    return [\n      method.toUpperCase(),\n      pathname,\n      this.createCanonicalQueryString(query),\n      this.createCanonicalHeaders(headers),\n      this.createSignedHeaders(headers),\n      payload\n    ].join('\\n');\n  };\n\n  createCanonicalQueryString = function(params) {\n    return Object.keys(params)\n      .sort()\n      .map(function(key) {\n        return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n      })\n      .join('&');\n  };\n\n  createCanonicalHeaders = function(headers) {\n    return Object.keys(headers)\n      .sort()\n      .map(function(name) {\n        return (\n          name.toLowerCase().trim() +\n          ':' +\n          headers[name].toString().trim() +\n          '\\n'\n        );\n      })\n      .join('');\n  };\n\n  createSignedHeaders = headers => {\n    return Object.keys(headers)\n      .sort()\n      .map(function(name) {\n        return name.toLowerCase().trim();\n      })\n      .join(';');\n  };\n\n  createCredentialScope = function(time, region, service) {\n    return [this.toDate(time), region, service, 'aws4_request'].join('/');\n  };\n\n  createStringToSign = function(time, region, service, request) {\n    return [\n      'AWS4-HMAC-SHA256',\n      this.toTime(time),\n      this.createCredentialScope(time, region, service),\n      this.hash(request, 'hex')\n    ].join('\\n');\n  };\n\n  createSignature = function(secret, time, region, service, stringToSign) {\n    var h1 = this.hmac('AWS4' + secret, this.toDate(time)); // date-key\n    var h2 = this.hmac(h1, region); // region-key\n    var h3 = this.hmac(h2, service); // service-key\n    var h4 = this.hmac(h3, 'aws4_request'); // signing-key\n    return this.hmac(h4, stringToSign, 'hex');\n  };\n\n  createPresignedS3URL = function(name, options) {\n    options = options || {};\n    options.method = options.method || 'GET';\n    options.bucket = options.bucket || process.env.AWS_S3_BUCKET;\n    return this.createPresignedURL(\n      options.method,\n      options.bucket + '.s3.amazonaws.com',\n      '/' + name,\n      's3',\n      'UNSIGNED-PAYLOAD',\n      options\n    );\n  };\n\n  helloWorld() {\n    console.log('Hello World');\n  }\n\n  createPresignedURL = (method, host, path, service, payload, options) => {\n    options = options || {};\n    options.key = options.key || process.env.AWS_ACCESS_KEY_ID;\n    options.secret = options.secret || process.env.AWS_SECRET_ACCESS_KEY;\n    options.protocol = options.protocol || 'https';\n    options.headers = options.headers || {};\n    options.timestamp = options.timestamp || Date.now();\n    options.region = options.region || process.env.AWS_REGION || 'us-east-1';\n    options.expires = options.expires || 86400; // 24 hours\n    options.headers = options.headers || {};\n\n    // host is required\n    options.headers.Host = host;\n\n    var query = options.query ? querystring.parse(options.query) : {};\n    query['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256';\n    query['X-Amz-Credential'] =\n      options.key +\n      '/' +\n      this.createCredentialScope(options.timestamp, options.region, service);\n    query['X-Amz-Date'] = this.toTime(options.timestamp);\n    query['X-Amz-Expires'] = options.expires;\n    query['X-Amz-SignedHeaders'] = this.createSignedHeaders(options.headers);\n    if (options.sessionToken) {\n      query['X-Amz-Security-Token'] = options.sessionToken;\n    }\n\n    var canonicalRequest = this.createCanonicalRequest(\n      method,\n      path,\n      query,\n      options.headers,\n      payload\n    );\n    var stringToSign = this.createStringToSign(\n      options.timestamp,\n      options.region,\n      service,\n      canonicalRequest\n    );\n    var signature = this.createSignature(\n      options.secret,\n      options.timestamp,\n      options.region,\n      service,\n      stringToSign\n    );\n    query['X-Amz-Signature'] = signature;\n    return (\n      options.protocol +\n      '://' +\n      host +\n      path +\n      '?' +\n      querystring.stringify(query)\n    );\n  };\n\n  toTime(time) {\n    return new Date(time).toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n  }\n\n  toDate(time) {\n    return this.toTime(time).substring(0, 8);\n  }\n\n  hmac(key, string, encoding) {\n    return crypto\n      .createHmac('sha256', key)\n      .update(string, 'utf8')\n      .digest(encoding);\n  }\n\n  hash(string, encoding) {\n    return crypto\n      .createHash('sha256')\n      .update(string, 'utf8')\n      .digest(encoding);\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.66d9300a.png\";","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nexport default ({ component: C, props: cProps, ...rest }) => (\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />\n);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport default ({ component: C, props: cProps, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      cProps.memberType === 'member' ? (\n        <C {...props} {...cProps} />\n      ) : (\n        <Redirect\n          to={`/profile?redirect=${props.location.pathname}${\n            props.location.search\n          }`}\n        />\n      )\n    }\n  />\n);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport default ({ component: C, props: cProps, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      cProps.isAuthenticated ? (\n        <C {...props} {...cProps} />\n      ) : (\n        <Redirect\n          to={`/login?redirect=${props.location.pathname}${\n            props.location.search\n          }`}\n        />\n      )\n    }\n  />\n);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction querystring(name, url = window.location.href) {\n  name = name.replace(/[[]]/g, '\\\\$&');\n  const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)', 'i');\n  const results = regex.exec(url);\n  if (!results) {\n    return null;\n  }\n  if (!results[2]) {\n    return '';\n  }\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nexport default ({ component: C, props: cProps, ...rest }) => {\n  const redirect = querystring('redirect');\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !cProps.isAuthenticated ? (\n          <C {...props} {...cProps} />\n        ) : (\n          <Redirect\n            to={redirect === '' || redirect === null ? '/' : redirect}\n          />\n        )\n      }\n    />\n  );\n};\n","import React, { Component } from 'react';\nimport './Home.css';\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className='Home'>\n        <div className='lander'>\n          <h1>Tactical Command Training</h1>\n          <p>Information about the training program will appear here.</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './About.css';\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div className='About'>\n        <div className='lander'>\n          <h1>About</h1>\n          <p>Details about Command Tactical Training will go here.</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Contact.css';\n\nexport default class Contact extends Component {\n  render() {\n    return (\n      <div className='Contact'>\n        <div className='lander'>\n          <h1>Contact</h1>\n          <p>Contact information/form will go here.</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport './LoaderButton.css';\n\nexport default ({\n  isLoading,\n  text,\n  loadingText,\n  className = '',\n  disabled = false,\n  ...props\n}) => (\n  <Button\n    className={`LoaderButton ${className}`}\n    disabled={disabled || isLoading}\n    {...props}\n  >\n    {isLoading && (\n      <Spinner\n        as='span'\n        animation='grow'\n        size='sm'\n        role='status'\n        aria-hidden='true'\n      />\n    )}\n    {!isLoading ? text : loadingText}\n  </Button>\n);\n","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport LoaderButton from '../../components/LoaderButton/LoaderButton';\nimport './Register.css';\n\nexport default class Register extends Component {\n  state = {\n    isLoading: false,\n    email: '',\n    password: '',\n    confirmPassword: '',\n    confirmationCode: '',\n    newUser: null,\n    alertError: ''\n  };\n\n  validateForm() {\n    const { email, password, confirmPassword } = this.state;\n    return (\n      email.length > 0 && password.length > 5 && password === confirmPassword\n    );\n  }\n\n  validateConfirmationForm() {\n    const { confirmationCode } = this.state;\n    return confirmationCode.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.id]: event.target.value });\n  };\n\n  handleSubmit = async event => {\n    const { email, password } = this.state;\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    try {\n      const newUser = await Auth.signUp({\n        username: email,\n        password: password\n      });\n      this.setState({ newUser, isLoading: false });\n    } catch (e) {\n      this.setState({ isLoading: false, alertError: e.message });\n    }\n  };\n\n  handleConfirmationSubmit = async event => {\n    const { email, password, confirmationCode } = this.state;\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    try {\n      await Auth.confirmSignUp(email, confirmationCode);\n      await Auth.signIn(email, password);\n      this.props.userHasAuthenticated(true);\n      this.props.history.push('/profile');\n    } catch (e) {\n      this.setState({ isLoading: false, alertError: e.message });\n    }\n  };\n\n  renderConfirmationForm() {\n    const { isLoading, confirmationCode } = this.state;\n    return (\n      <Form onSubmit={this.handleConfirmationSubmit}>\n        <Form.Group controlId='confirmationCode'>\n          <Form.Label>Confirmation Code</Form.Label>\n          <Form.Control\n            autoFocus\n            type='tel'\n            size='lg'\n            value={confirmationCode}\n            onChange={this.handleChange}\n          />\n          <Form.Text className='text-muted'>\n            Please check your email for the code.\n          </Form.Text>\n        </Form.Group>\n        <LoaderButton\n          variant='primary'\n          size='lg'\n          disabled={!this.validateConfirmationForm()}\n          type='submit'\n          isLoading={isLoading}\n          text='Verify'\n          loadingText='Verifying...'\n        />\n      </Form>\n    );\n  }\n\n  renderForm() {\n    const { isLoading, email, password, confirmPassword } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type='email'\n            size='lg'\n            autoComplete='email'\n            value={email}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            size='lg'\n            autoComplete='new-password'\n            value={password}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            size='lg'\n            autoComplete='new-password'\n            value={confirmPassword}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <LoaderButton\n          variant='primary'\n          size='lg'\n          disabled={!this.validateForm()}\n          type='submit'\n          isLoading={isLoading}\n          text='Register'\n          loadingText='Registering...'\n        />\n      </Form>\n    );\n  }\n\n  handleDismissAlert = () => {\n    this.setState({ alertError: '' });\n  };\n\n  renderAlert() {\n    const { alertError } = this.state;\n    return (\n      <Alert variant='danger' onClose={this.handleDismissAlert} dismissible>\n        <Alert.Heading>Error</Alert.Heading>\n        <p>{alertError}</p>\n      </Alert>\n    );\n  }\n\n  render() {\n    const { newUser, alertError } = this.state;\n    return (\n      <div className='Register'>\n        <Row>\n          <Col md={{ span: 4, offset: 4 }}>\n            {alertError !== '' && this.renderAlert()}\n            {newUser === null\n              ? this.renderForm()\n              : this.renderConfirmationForm()}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport LoaderButton from '../../components/LoaderButton/LoaderButton';\nimport { Auth } from 'aws-amplify';\n\nexport default class Login extends Component {\n  state = {\n    isLoading: false,\n    email: '',\n    password: '',\n    alertError: ''\n  };\n\n  validateForm() {\n    const { email, password } = this.state;\n    return email.length > 0 && password.length > 5;\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.id]: event.target.value });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    try {\n      await Auth.signIn(this.state.email, this.state.password);\n      this.props.userHasAuthenticated(true);\n      this.props.history.push('/dashboard');\n    } catch (e) {\n      this.setState({ isLoading: false, alertError: e.message });\n    }\n  };\n\n  handleDismissAlert = () => {\n    this.setState({ alertError: '' });\n  };\n\n  renderAlert() {\n    const { alertError } = this.state;\n    return (\n      <Alert variant='danger' onClose={this.handleDismissAlert} dismissible>\n        <Alert.Heading>Error</Alert.Heading>\n        <p>{alertError}</p>\n      </Alert>\n    );\n  }\n\n  render() {\n    const { isLoading, email, password, alertError } = this.state;\n    return (\n      <div className='Login'>\n        <Row>\n          <Col md={{ span: 4, offset: 4 }}>\n            {alertError !== '' && this.renderAlert()}\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group controlId='email'>\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  autoFocus\n                  type='email'\n                  size='lg'\n                  autoComplete='username'\n                  value={email}\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type='password'\n                  size='lg'\n                  autoComplete='current-password'\n                  value={password}\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <LoaderButton\n                variant='primary'\n                size='lg'\n                disabled={!this.validateForm()}\n                type='submit'\n                isLoading={isLoading}\n                text='Login'\n                loadingText='Loggin in...'\n              />\n            </Form>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Demo.css';\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div className='Demo'>\n        <div className='lander'>\n          <h1>Demo</h1>\n          <p>Demo will appear here.</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\nimport LoaderButton from '../../../../components/LoaderButton/LoaderButton';\nimport './BillingForm.css';\n\nclass BillingForm extends Component {\n  state = {\n    name: '',\n    isProcessing: false,\n    isCardComplete: false\n  };\n\n  validateForm() {\n    const { name, isCardComplete } = this.state;\n    return name !== '' && isCardComplete;\n  }\n\n  handleFieldChange = event => {\n    this.setState({ [event.target.id]: event.target.value });\n  };\n\n  handleCardFieldChange = event => {\n    this.setState({ isCardComplete: event.complete });\n  };\n\n  handleSubmitClick = async event => {\n    event.preventDefault();\n    const { name } = this.state;\n    this.setState({ isProcessing: true });\n    const { token, error } = await this.props.stripe.createToken({ name });\n    this.setState({ isProcessing: false });\n    this.props.onSubmit(name, { token, error });\n  };\n\n  render() {\n    const { isProcessing, name } = this.state;\n    const loading = isProcessing || this.props.loading;\n\n    return (\n      <Form className='BillingForm' onSubmit={this.handleSubmitClick}>\n        <Form.Group controlId='name'>\n          <Form.Label>Cardholder&apos;s Name</Form.Label>\n          <Form.Control\n            autoFocus\n            type='text'\n            size='lg'\n            value={name}\n            placeholder='Name on card'\n            onChange={this.handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId='card'>\n          <Form.Label>Credit Card Info</Form.Label>\n          <CardElement\n            className='card-field'\n            onChange={this.handleCardFieldChange}\n            style={{\n              base: {\n                fontSize: '18px',\n                fontFamily: '\"Open Sans\", sans-serif'\n              }\n            }}\n          />\n        </Form.Group>\n        <LoaderButton\n          variant='primary'\n          size='lg'\n          disabled={!this.validateForm()}\n          type='submit'\n          isLoading={loading}\n          text='Purchase'\n          loadingText='Processing...'\n        />\n      </Form>\n    );\n  }\n}\n\nexport default injectStripe(BillingForm);\n","export default {\n  STRIPE_KEY: 'pk_test_SdjnHScZnZMzPIk4Y5jHXo4H00gR6cyGFH',\n  COGNITIVE_SPEECH_KEY: '702243bec2934359a0d4ea8db32aef38',\n  s3: {\n    REGION: 'us-west-2',\n    BUCKET: 'ctt-video'\n  },\n  apiGateway: {\n    REGION: 'us-west-2',\n    URL: 'https://u2z0rz9asj.execute-api.us-west-2.amazonaws.com/prod'\n  },\n  cognito: {\n    REGION: 'us-west-2',\n    USER_POOL_ID: 'us-west-2_0QOvAuKl9',\n    APP_CLIENT_ID: '72j28lpr3ne78v476r763c6ln7',\n    IDENTITY_POOL_ID: 'us-west-2:35b463c7-d4a7-4dcf-ba01-fa76f1728313'\n  },\n  polly: {\n    REGION: 'us-west-2',\n    PROXY: false,\n    DEFAULT_VOICE_ID: 'Matthew',\n    LANGUAGE_CODE: 'en-US'\n  },\n  transcribe: {\n    REGION: 'us-west-2',\n    PROXY: false,\n    LANGUAGE_CODE: 'en-US'\n  },\n  comprehend: {\n    REGION: 'us-west-2',\n    PROXY: false,\n    TYPE: 'ALL'\n  }\n};\n","import React, { Component, Fragment } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport LoaderButton from '../../../components/LoaderButton/LoaderButton';\nimport { Auth, API } from 'aws-amplify';\nimport { Elements, StripeProvider } from 'react-stripe-elements';\nimport BillingForm from './BillingForm/BillingForm';\nimport config from '../../../config';\n//import { formatUSD, nextBill } from '../../../utils/formatNumbers';\nimport { formatUSD } from '../../../utils/formatNumbers';\n\nexport default class Billing extends Component {\n  state = {\n    isLoading: false,\n    isLoadingProducts: true,\n    products: [],\n    plans: [],\n    email: '',\n    subscription: null,\n    alertHeading: '',\n    alertVariant: '',\n    alertMessage: '',\n    alertRedirect: '',\n    alertRedirectMessage: '',\n    showAlert: false,\n    showCancelSubscriptionAlert: false\n  };\n\n  async componentDidMount() {\n    try {\n      const products = await this.getProducts();\n      const plans = await this.getPlans();\n      const session = await Auth.currentSession();\n      this.setState({\n        products: products,\n        plans: plans,\n        email: session.idToken.payload.email\n      });\n      const subscription = await this.getSubscription();\n      if (subscription) {\n        this.setState({ subscription: subscription });\n      }\n      this.setState({ isLoadingProducts: false });\n    } catch (e) {\n      this.setState({ isLoadingProducts: false });\n    }\n  }\n\n  getSubscription() {\n    return API.get('comtac', '/billing/subscription');\n  }\n\n  getProducts() {\n    return API.get('comtac', '/billing/products');\n  }\n\n  getPlans() {\n    return API.get('comtac', '/billing/plans');\n  }\n\n  createCustomer(details) {\n    return API.post('comtac', '/billing/customers', {\n      body: details\n    });\n  }\n\n  createSubscription(details) {\n    return API.post('comtac', '/billing/subscriptions', {\n      body: details\n    });\n  }\n\n  cancelSubscription() {\n    const { subscription } = this.state;\n    const details = { subscriptionId: subscription.subscriptionId };\n    return API.post('comtac', '/billing/cancel', {\n      body: details\n    });\n  }\n\n  handleFormSubmit = async (name, { token, error }) => {\n    const { plans, email } = this.state;\n    if (error) {\n      this.setState({\n        alertHeading: 'Error',\n        alertVariant: 'danger',\n        alertMessage: error,\n        alertRedirect: '',\n        alertRedirectMessage: '',\n        showAlert: true\n      });\n      return;\n    }\n\n    this.setState({ isLoading: true });\n\n    try {\n      const customer = await this.createCustomer({\n        source: token.id,\n        name: name,\n        email: email\n      });\n      await this.createSubscription({\n        customerId: customer.id,\n        planId: plans[0].id\n      });\n      const subscription = await this.getSubscription();\n      const canceled = false;\n      this.props.setMemberType(canceled);\n      this.setState({\n        alertHeading: 'Success',\n        alertVariant: 'success',\n        alertMessage: 'Your subscription has been successfully been created.',\n        alertRedirect: '/dashboard',\n        alertRedirectMessage: 'Dashboard',\n        showAlert: true,\n        isLoading: false,\n        subscription: subscription\n      });\n    } catch (e) {\n      this.setState({\n        alertHeading: 'Error',\n        alertVariant: 'danger',\n        alertMessage: e.message,\n        alertRedirect: '',\n        alertRedirectMessage: '',\n        showAlert: true,\n        isLoading: false\n      });\n    }\n  };\n\n  handleCancelSubscriptionConfirmation = event => {\n    this.setState({\n      showCancelSubscriptionAlert: true\n    });\n  };\n\n  handleDismissCancelSubscriptionAlert = () => {\n    this.setState({\n      showCancelSubscriptionAlert: false\n    });\n  };\n\n  handleCancelSubscription = async event => {\n    this.setState({ isCanceling: true });\n    await this.cancelSubscription();\n    const canceled = true;\n    this.props.setMemberType(canceled);\n    this.setState({\n      alertHeading: 'Success',\n      alertVariant: 'success',\n      alertMessage: 'Your subscription has been successfully been canceled.',\n      alertRedirect: '',\n      alertRedirectMessage: '',\n      showAlert: true,\n      isCanceling: false,\n      subscription: null,\n      showCancelSubscriptionAlert: false\n    });\n  };\n\n  handleAlertRedirect = () => {\n    const { alertRedirect } = this.state;\n    this.props.history.push(alertRedirect);\n  };\n\n  handleDismissAlert = () => {\n    this.setState({\n      alertHeading: '',\n      alertVariant: '',\n      alertMessage: '',\n      alertRedirect: '',\n      alertRedirectMessage: '',\n      showAlert: false\n    });\n  };\n\n  renderAlert() {\n    const {\n      alertHeading,\n      alertVariant,\n      alertMessage,\n      alertRedirect,\n      alertRedirectMessage,\n      showAlert\n    } = this.state;\n    return (\n      <Fragment>\n        {showAlert && (\n          <Alert\n            variant={alertVariant}\n            onClose={this.handleDismissAlert}\n            dismissible\n          >\n            <Alert.Heading>{alertHeading}</Alert.Heading>\n            <p>{alertMessage}</p>\n            {alertRedirect !== '' && (\n              <Fragment>\n                <hr />\n                <div className='d-flex justify-content-end'>\n                  <Button\n                    onClick={this.handleAlertRedirect}\n                    variant={`outline-${alertVariant}`}\n                  >\n                    {alertRedirectMessage}\n                  </Button>\n                </div>\n              </Fragment>\n            )}\n          </Alert>\n        )}\n      </Fragment>\n    );\n  }\n\n  renderCancelSubscriptionAlert() {\n    const { isCanceling } = this.state;\n    return (\n      <Fragment>\n        <Alert\n          variant='danger'\n          onClose={this.handleDismissCancelSubscriptionAlert}\n          dismissible\n        >\n          <Alert.Heading>Are you sure you want to cancel?</Alert.Heading>\n          <p>\n            You are subscribed using our introductory pricing. If you cancel\n            now, and later wish to resubscribe the cost will be the full $80\n            monthly.\n          </p>\n          <hr />\n          <div className='d-flex justify-content-end'>\n            <LoaderButton\n              variant='danger'\n              size='sm'\n              type='button'\n              isLoading={isCanceling}\n              text='Cancel'\n              loadingText='Canceling...'\n              onClick={this.handleCancelSubscription}\n            />\n          </div>\n        </Alert>\n      </Fragment>\n    );\n  }\n\n  renderNextBill() {\n    /*const { subscription, isCanceling } = this.state;\n    const currentPeriodEnd = subscription.stripe.current_period_end;\n    const days = nextBill(currentPeriodEnd);*/\n    const { isCanceling } = this.state;\n\n    return (\n      <Fragment>\n        <Card.Text>\n          {/*Next payment in {days} day\n          {days !== 1 ? 's' : ''}*/}\n          <strong>Subscribed!</strong>\n        </Card.Text>\n        <LoaderButton\n          variant='danger'\n          size='sm'\n          type='button'\n          isLoading={isCanceling}\n          text='Cancel'\n          loadingText='Canceling...'\n          onClick={this.handleCancelSubscriptionConfirmation}\n        />\n      </Fragment>\n    );\n  }\n\n  render() {\n    const {\n      isLoading,\n      isLoadingProducts,\n      products,\n      plans,\n      subscription,\n      alertHeading,\n      showCancelSubscriptionAlert\n    } = this.state;\n    return !isLoadingProducts ? (\n      <div className='Billing'>\n        {showCancelSubscriptionAlert\n          ? this.renderCancelSubscriptionAlert()\n          : ''}\n        {alertHeading !== '' ? this.renderAlert() : ''}\n        <Card style={{ width: '18rem' }}>\n          {plans.map((plan, key) => {\n            return (\n              <Card.Body key={key}>\n                <Card.Title>{products[0].name}</Card.Title>\n                <Card.Subtitle className='mb-2 text-muted'>\n                  {formatUSD(plan.amount)} / {plan.interval}\n                </Card.Subtitle>\n                {subscription !== null &&\n                  !subscription.canceled &&\n                  this.renderNextBill()}\n              </Card.Body>\n            );\n          })}\n        </Card>\n        {subscription === null && (\n          <StripeProvider apiKey={config.STRIPE_KEY}>\n            <Elements>\n              <BillingForm\n                loading={isLoading}\n                onSubmit={this.handleFormSubmit}\n              />\n            </Elements>\n          </StripeProvider>\n        )}\n        {subscription !== null && subscription.canceled && (\n          <StripeProvider apiKey={config.STRIPE_KEY}>\n            <Elements>\n              <BillingForm\n                loading={isLoading}\n                onSubmit={this.handleFormSubmit}\n              />\n            </Elements>\n          </StripeProvider>\n        )}\n      </div>\n    ) : (\n      <Spinner animation='border' role='status'>\n        <span className='sr-only'>Loading...</span>\n      </Spinner>\n    );\n  }\n}\n","export function formatUSD(stripeAmount) {\n  return `$${(stripeAmount / 100).toFixed(2)}`;\n}\n\nexport function formatStripeAmount(USDString) {\n  return parseFloat(USDString) * 100;\n}\n\nexport function nextBill(currentPeriodEnd) {\n  const currentTime = Math.floor(new Date().getTime() / 1000);\n  const timeBetween = currentPeriodEnd - currentTime;\n  return Math.floor(timeBetween / (24 * 60 * 60)) + 1;\n}\n","import React, { Component, Fragment } from 'react';\nimport Billing from './Billing/Billing';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport LoaderButton from '../../components/LoaderButton/LoaderButton';\nimport { API } from 'aws-amplify';\n\nexport default class Profile extends Component {\n  state = {\n    isLoading: false,\n    isLoadingAlarms: true,\n    isUpdating: false,\n    alarms: false,\n    alarm1: '',\n    alarm2: '',\n    alarm3: '',\n    dispatchCenter: ''\n  };\n\n  async componentDidMount() {\n    try {\n      const data = await this.getAlarms();\n      this.setState({\n        alarms: true,\n        alarm1: data.alarm1,\n        alarm2: data.alarm2,\n        alarm3: data.alarm3,\n        dispatchCenter: data.dispatchCenter,\n        isLoadingAlarms: false\n      });\n    } catch (e) {\n      this.setState({ isLoadingAlarms: false });\n    }\n  }\n\n  validateForm() {\n    const { alarm1, alarm2, alarm3, dispatchCenter } = this.state;\n    return (\n      alarm1.length > 0 &&\n      alarm2.length > 0 &&\n      alarm3.length > 0 &&\n      dispatchCenter.length > 0\n    );\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.id]: event.target.value });\n  };\n\n  handleSubmit = async event => {\n    const { alarm1, alarm2, alarm3, dispatchCenter, isUpdating } = this.state;\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    try {\n      const data = {\n        alarm1: alarm1,\n        alarm2: alarm2,\n        alarm3: alarm3,\n        dispatchCenter: dispatchCenter\n      };\n      if (isUpdating) {\n        await this.updateAlarms(data);\n      } else {\n        await this.createAlarms(data);\n      }\n      this.setState({ isLoading: false, isUpdating: false, alarms: data });\n    } catch (e) {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  handleUpdateRequest = () => {\n    this.setState({ isUpdating: true });\n  };\n\n  createAlarms(data) {\n    return API.post('comtac', '/alarms', {\n      body: data\n    });\n  }\n\n  updateAlarms(data) {\n    return API.put('comtac', '/alarms', {\n      body: data\n    });\n  }\n\n  getAlarms() {\n    return API.get('comtac', '/alarms');\n  }\n\n  renderForm() {\n    const { isLoading, alarm1, alarm2, alarm3, dispatchCenter } = this.state;\n    return (\n      <Fragment>\n        <p>Personalize your alarms by separating them with commas.</p>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId='alarm1'>\n            <Form.Label>First Alarm</Form.Label>\n            <Form.Control\n              autoFocus\n              type='text'\n              size='lg'\n              value={alarm1}\n              placeholder='Engine 11, Truck 12, Chief 13'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='alarm2'>\n            <Form.Label>Second Alarm</Form.Label>\n            <Form.Control\n              type='text'\n              size='lg'\n              value={alarm2}\n              placeholder='Engine 21, Truck 22, Chief 23'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='alarm3'>\n            <Form.Label>Third Alarm</Form.Label>\n            <Form.Control\n              type='text'\n              size='lg'\n              value={alarm3}\n              placeholder='Engine 31, Truck 32, Chief 33'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='dispatchCenter'>\n            <Form.Label>Dispatch Center</Form.Label>\n            <Form.Control\n              type='text'\n              size='lg'\n              value={dispatchCenter}\n              placeholder='Dispatch Center Name'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <LoaderButton\n            variant='primary'\n            size='lg'\n            disabled={!this.validateForm()}\n            type='submit'\n            isLoading={isLoading}\n            text='Submit'\n            loadingText='Saving...'\n          />\n        </Form>\n      </Fragment>\n    );\n  }\n\n  renderAlarms() {\n    const { alarm1, alarm2, alarm3, dispatchCenter } = this.state;\n    return (\n      <Fragment>\n        <Button variant='dark' size='sm' onClick={this.handleUpdateRequest}>\n          Edit\n        </Button>\n        <ListGroup>\n          <ListGroup.Item>\n            <strong>First Alarm:</strong> {alarm1}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <strong>Second Alarm:</strong> {alarm2}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <strong>Third Alarm:</strong> {alarm3}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <strong>Dispatch Center:</strong> {dispatchCenter}\n          </ListGroup.Item>\n        </ListGroup>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const { isLoadingAlarms, alarms, isUpdating } = this.state;\n    return (\n      !isLoadingAlarms && (\n        <div className='Profile'>\n          <Row>\n            <Col md={{ span: 8, offset: 2 }}>\n              <h1>Profile</h1>\n              <h3>Alarms</h3>\n              {!alarms || isUpdating ? this.renderForm() : this.renderAlarms()}\n              <br />\n              <br />\n              <h3>Billing</h3>\n              <Billing\n                setMemberType={this.props.setMemberType}\n                history={this.props.history}\n              />\n            </Col>\n          </Row>\n        </div>\n      )\n    );\n  }\n}\n","import axios from 'axios';\n\nconst instance = axios.create({\n  //baseURL: `${process.env.REACT_APP_API_URI}`\n  baseURL: 'https://u2z0rz9asj.execute-api.us-west-2.amazonaws.com/prod/'\n});\n\nexport default instance;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from '../../axios';\nimport './Dashboard.css';\n\nclass Dashboard extends Component {\n  state = {\n    evolutions: []\n  };\n\n  componentDidMount() {\n    if (this.state.evolutions.length < 1) {\n      /*let evolutions = \"\";\n      if (this.props.match.params.evolution) {\n        evolution = this.props.match.params.evolution;\n      }*/\n\n      axios.get('/evolutions').then(response => {\n        this.setState({ evolutions: response.data });\n      });\n    }\n  }\n\n  render() {\n    let evoList = <p style={{ textAlign: 'center' }}>Page not found...</p>;\n    if (this.props.match.params.evolutions) {\n      evoList = <p style={{ textAlign: 'center' }}>Loading...</p>;\n    }\n    if (this.state.evolutions) {\n      evoList = (\n        <div className='Evolutions'>\n          <div className='card-columns'>\n            {this.state.evolutions.map((evolution, index) => {\n              const viewLink = '/evolutions/' + evolution.pk;\n              return (\n                <div className='card' key={index}>\n                  <div className='card-body'>\n                    <h5 className='card-title'>{evolution.street}</h5>\n                    <p className='card-text'>{evolution.category}</p>\n                    <Link to={viewLink} className='card-link'>\n                      View\n                    </Link>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      );\n    }\n    return evoList;\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport './TextCanvas.css';\nimport { isArray } from 'util';\n\nclass TextCanvas extends Component {\n  state = {\n    lines: [],\n    currentYLocation: 0,\n    endingYLocation: 0,\n    isFinished: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.textCanvas = React.createRef();\n    this.padding = 220;\n    this.leading = 10;\n    this.fontSize = 32;\n    this.font = `${this.fontSize}px Anton`;\n    this.textColor = '#86352C';\n    this.outlineColor = '#FFF';\n    this.rate = 0.4;\n  }\n\n  componentDidMount() {\n    this.textToLines();\n  }\n\n  componentWillUnmount() {\n    const { animateId } = this.state;\n    cancelAnimationFrame(animateId);\n  }\n\n  textToLines() {\n    const canvas = this.textCanvas.current;\n    const ctx = canvas.getContext('2d');\n    ctx.font = this.font;\n    const text = isArray(this.props.text) ? this.props.text : [this.props.text];\n    const currentYLocation = canvas.height;\n    var lines = [];\n    text.forEach(phrase => {\n      let words = phrase.toUpperCase().split(' ');\n      let line = '';\n      let space = '';\n\n      while (words.length > 0) {\n        let word = words.shift();\n        let width = ctx.measureText(line + space + word).width + this.padding;\n        if (width < canvas.width) {\n          line += space + word;\n          space = ' ';\n        } else {\n          if (space === '') {\n            line += word;\n          } else {\n            words.unshift(word);\n          }\n\n          lines.push(line);\n          space = '';\n          line = '';\n        }\n      }\n\n      if (line !== '') {\n        lines.push(line);\n      }\n      lines.push(' ');\n    });\n    const endingYLocation =\n      -(lines.length + 0.5) * (this.fontSize + this.leading);\n\n    this.setState(\n      {\n        lines: lines,\n        currentYLocation: currentYLocation,\n        endingYLocation: endingYLocation\n      },\n      () => {\n        this.animate();\n      }\n    );\n  }\n\n  finishAnimate() {\n    const { isFinished } = this.state;\n    if (!isFinished) {\n      this.setState({ isFinished: true }, () => {\n        this.props.handleCallback();\n      });\n    }\n  }\n\n  animate() {\n    const { endingYLocation } = this.state;\n    let { currentYLocation } = this.state;\n    const animateId = requestAnimationFrame(() => {\n      if (currentYLocation > endingYLocation) {\n        this.animate();\n      } else {\n        this.finishAnimate();\n      }\n    });\n    if (currentYLocation > endingYLocation) {\n      currentYLocation -= this.rate;\n    }\n    this.setState({\n      animateId: animateId,\n      currentYLocation: currentYLocation\n    });\n    this.drawText();\n  }\n\n  drawText() {\n    const { lines, currentYLocation } = this.state;\n    const canvas = this.textCanvas.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.font = this.font;\n    ctx.fillStyle = this.textColor;\n    ctx.strokeStyle = this.outlineColor;\n    let currentLineX = 0;\n    let currentLineY = currentYLocation;\n    lines.forEach(line => {\n      currentLineX = Math.floor(\n        (canvas.width - ctx.measureText(line).width) / 2\n      );\n      currentLineY += this.fontSize + this.leading;\n      ctx.fillText(line, currentLineX, currentLineY);\n      ctx.strokeText(line, currentLineX, currentLineY);\n    });\n  }\n\n  render() {\n    return (\n      <canvas\n        ref={this.textCanvas}\n        width='800'\n        height='450'\n        className='textCanvas'\n      />\n    );\n  }\n}\n\nexport default TextCanvas;\n","import React, { Component } from 'react';\n\nexport default class ProcessSpeech extends Component {\n  state = {\n    userSpeechChanged: '',\n    alarm2KeywordDictionary: [\n      'Alarm 2:00',\n      'Alarm 2',\n      'alarm 2:00',\n      'alarm 2',\n      'alarm two',\n      'Alarm two'\n    ],\n    fireAttackDictionary: ['fire attach', 'fire attack', 'far attack'],\n    exposureGroupDictionary: ['exposure'],\n    ventGroupDictionary: [\n      'whent',\n      'went',\n      'vent',\n      'when',\n      'Ventilacion',\n      'Ventilation'\n    ],\n    rickGroupDictionary: [\n      'rick',\n      'R I C',\n      'R.I.C',\n      'Rick',\n      'R I C',\n      'Ric',\n      'ric'\n    ],\n    assignKeywordDictionary: ['Assign', 'assign', 'Sign', 'Sign', 'Assigned'],\n    parKeywordDictionary: ['Par', 'par', 'per', 'bar']\n  };\n\n  componentDidMount() {\n    console.log('ProcessSpeech()');\n    this.processTranscript();\n  }\n\n  processTranscript() {\n    // const { alarm2KeywordDictionary } = this.state;\n    const {\n      initialReportComplete,\n      threeSixtyComplete,\n      arrivalsComplete,\n      commandingUnitComplete,\n      transcript,\n      step4Index\n    } = this.props.childProps;\n    // if (this.includesAnyText(alarm2KeywordDictionary)) {\n    //   this.processSecondAlarm();\n    // } else\n    if (!initialReportComplete) {\n      console.log('initialReport()');\n      this.processInitialReport();\n    } else if (!threeSixtyComplete) {\n      console.log('secondaryReport()');\n      this.processThreeSixtyAssessment();\n    } else if (!arrivalsComplete) {\n      console.log('decisionOnSpeech()');\n      this.decisionOnSpeech(transcript, step4Index);\n    } else if (!commandingUnitComplete) {\n      this.commandingUnitReport();\n    }\n  }\n\n  processInitialReport() {\n    const { transcript, dispatchCenter } = this.props.childProps;\n    const phrase = `${dispatchCenter} copies ${transcript}`;\n    this.props.childProps.handleSpeak(phrase);\n    this.processInitialEvaluation(transcript);\n    const updates = {\n      initialSpeech: transcript,\n      initialReportComplete: true,\n      transcript: ''\n    };\n    this.props.childProps.handleProcessSpeechComplete(updates);\n  }\n\n  processInitialEvaluation(transcript) {\n    let { initialMatched, slicerMatched, rectoMatched } = this.props.childProps;\n\n    initialMatched = initialMatched.initialMatched;\n    slicerMatched = slicerMatched.slicerMatched;\n    rectoMatched = rectoMatched.rectoMatched;\n\n    if (transcript !== undefined) {\n      let initialDictionary = [];\n      initialDictionary[0] = [\n        'Small',\n        'small',\n        'Medium',\n        'Large',\n        'Extra Large',\n        'Mega',\n        'Square Feet',\n        'Dimentions 50 by 120'\n      ];\n      initialDictionary[1] = [\n        'Single Story',\n        'single Storey',\n        '2 Story',\n        'two-story',\n        'two story',\n        'two storey',\n        'double story',\n        'double-story',\n        'double storey',\n        'Three story',\n        'Three-story',\n        'three storey',\n        '3 Story',\n        'Mid Rise',\n        'High Rise',\n        'High-rise'\n      ];\n      initialDictionary[2] = [\n        'Residential',\n        'single-family dwelling',\n        'single family dwelling',\n        'single families',\n        'multi family dwelling',\n        'garden apartment',\n        'call apartment',\n        'townhome',\n        'town home',\n        'condominium',\n        'duplex',\n        'business office',\n        'warehouse',\n        'medical office',\n        'retail',\n        'Apartment',\n        'House',\n        'Single Family Dwelling',\n        'Townhome',\n        'Center Hall',\n        'Commercial',\n        'Office',\n        'Taxpayer',\n        'Condo',\n        'Condominium',\n        'Industrial',\n        'Metal building',\n        'Warehouse',\n        'Tiltup',\n        'Home',\n        'Retail'\n      ];\n      initialDictionary[3] = [\n        'Smoke',\n        'Smoke showing',\n        'fire showing',\n        'smoke and fire showing',\n        'nothing showing',\n        'Fire',\n        'Nothing'\n      ];\n      initialDictionary[4] = [\n        'Laying a supply line',\n        'establishing water supply',\n        'entering the rescue mode',\n        'quick attack',\n        'command',\n        'investigation',\n        'Water Supply',\n        'Laying Lines',\n        'Investigating',\n        'Command',\n        'Rescue',\n        'attack lines'\n      ];\n      initialDictionary[5] = [\n        'Second alarm',\n        'third alarm',\n        'police',\n        'PD',\n        'ambulance',\n        'public works',\n        '2nd Alarm',\n        'Police',\n        'Ambulance',\n        'EMS',\n        'Officers'\n      ];\n      initialDictionary[6] = [\n        'Main Street command',\n        'Main Street incident',\n        'main street IC',\n        'men straight incident',\n        'men straight',\n        'usually bear is the name of the street that the incident is on',\n        'Consistent with the address'\n      ];\n      initialDictionary[7] = [\n        'Typical light weight construction',\n        'lightweight',\n        'ordinary construction',\n        'cut and stack construction',\n        'poured in place',\n        '360 degree assessment',\n        '360 degree ',\n        '360',\n        'concrete tilt up',\n        'metal clad building',\n        'stack conception'\n      ];\n      const rescueDictionary = ['Rescue', 'search'];\n      const salvageDictionary = [\n        'salvage',\n        'recovery',\n        'property',\n        'property conservation'\n      ];\n\n      // for (var i = 0; i < initialDictionary.length; i++) {\n      //   initialMatched[i] = {};\n      //   initialMatched[i].keywords = [];\n      //   initialMatched[i].keywords = initialDictionary[i];\n      //   initialMatched[i].matched = 0;\n      //   initialMatched[i].matchKeyword = '';\n      // }\n\n      initialDictionary.forEach((elem, index) => {\n        elem.forEach(item => {\n          var re = new RegExp(item, 'gi');\n          if (transcript.match(re)) {\n            initialMatched[index].matched = 1;\n            initialMatched[index].matchKeyword = item;\n          }\n        });\n      });\n\n      // for (var i = 0; i <= 6; i++) {\n      //   slicerMatched[i] = {};\n      //   slicerMatched[i].matched = 0;\n      //   slicerMatched[i].matchKeyword = '';\n\n      //   rectoMatched[i] = {};\n      //   rectoMatched[i].matched = 0;\n      //   rectoMatched[i].matchKeyword = '';\n      // } //Initialize SLICER and RECTO-VS array\n\n      rescueDictionary.forEach(item => {\n        var re = new RegExp(item, 'gi');\n        if (transcript.match(re)) {\n          slicerMatched[5].matched = 1;\n          slicerMatched[5].matchKeyword = item;\n\n          rectoMatched[0].matched = 1;\n          rectoMatched[0].matchKeyword = item;\n          rectoMatched[4].matched = 1;\n          rectoMatched[4].matchKeyword = item;\n        }\n      });\n\n      salvageDictionary.forEach(item => {\n        var re = new RegExp(item, 'gi');\n        if (transcript.match(re)) {\n          slicerMatched[6].matched = 1;\n          slicerMatched[6].matchKeyword = item;\n\n          rectoMatched[5].matched = 1;\n          rectoMatched[5].matchKeyword = item;\n        }\n      });\n      const updates = {\n        initialMatched: initialMatched,\n        rectoMatched: rectoMatched,\n        slicerMatched: slicerMatched\n      };\n      this.props.childProps.handleEvaluationComplete(updates);\n    }\n  }\n\n  processThreeSixtyAssessment() {\n    const { transcript, dispatchCenter } = this.props.childProps;\n    const phrase = `${dispatchCenter} copies ${transcript}`;\n    this.props.childProps.handleSpeak(phrase);\n    this.processThreeSixtyEvaluation(transcript);\n    const updates = {\n      secondarySpeech: transcript,\n      threeSixtyComplete: true,\n      transcript: '',\n      startArrival: true\n    };\n    this.props.childProps.handleProcessSpeechComplete(updates);\n  }\n\n  processThreeSixtyEvaluation(transcript) {\n    let {\n      slicerMatched,\n      secondaryMatched,\n      initialMatched\n    } = this.props.childProps;\n    initialMatched = initialMatched.initialMatched;\n    secondaryMatched = secondaryMatched.secondaryMatched;\n    slicerMatched = slicerMatched.slicerMatched;\n\n    if (transcript !== undefined) {\n      let secondaryDictionary = [];\n      secondaryDictionary[0] = ['Alpha', 'bravo', 'Charlie', 'Delta'];\n      secondaryDictionary[1] = [\n        'Structure fire',\n        'room and contents fire',\n        'room and contents. fire',\n        'room and contents',\n        'attic fire',\n        'basement fire'\n      ];\n      secondaryDictionary[2] = [\n        'Bidirectional',\n        'unidirectional',\n        'exhaust on Alpha',\n        'bravo',\n        'Charlie',\n        'Delta',\n        'intake',\n        'on Alpha',\n        'bravo',\n        'Charlie',\n        'Delta'\n      ];\n      secondaryDictionary[3] = [\n        'survivability profile',\n        'Survivability profile',\n        'Positive',\n        'marginal',\n        'negative'\n      ];\n      // for (var i = 0; i < secondaryDictionary.length; i++) {\n      //   secondaryMatched[i] = {};\n      //   secondaryMatched[i].keywords = [];\n      //   secondaryMatched[i].keywords = secondaryDictionary[i];\n      //   secondaryMatched[i].matched = 0;\n      //   secondaryMatched[i].matchKeyword = '';\n      // }\n\n      secondaryDictionary.forEach((elem, index) => {\n        elem.forEach(item => {\n          var re = new RegExp(item, 'gi');\n          if (transcript.match(re)) {\n            secondaryMatched[index].matched = 1;\n            secondaryMatched[index].matchKeyword = item;\n          }\n        });\n      });\n\n      //S in SLICER\n      if (\n        initialMatched[0].matched &&\n        initialMatched[1].matched &&\n        initialMatched[2].matched &&\n        secondaryMatched[0].matched\n      ) {\n        slicerMatched[0].matched = 1;\n        slicerMatched[0].matchKeyword =\n          slicerMatched[0].matchKeyword + initialMatched[0].matchKeyword + ', ';\n        slicerMatched[0].matchKeyword =\n          slicerMatched[0].matchKeyword + initialMatched[1].matchKeyword + ', ';\n        slicerMatched[0].matchKeyword =\n          slicerMatched[0].matchKeyword + initialMatched[2].matchKeyword + ', ';\n        slicerMatched[0].matchKeyword =\n          slicerMatched[0].matchKeyword +\n          secondaryMatched[0].matchKeyword +\n          ', ';\n      }\n      // L\n      if (initialMatched[4].matched && secondaryMatched[0].matched) {\n        slicerMatched[1].matched = 1;\n        slicerMatched[1].matchKeyword =\n          slicerMatched[1].matchKeyword + initialMatched[4].matchKeyword + ', ';\n        slicerMatched[1].matchKeyword =\n          slicerMatched[1].matchKeyword +\n          secondaryMatched[0].matchKeyword +\n          ', ';\n      }\n      // I\n      if (secondaryMatched[1].matched) {\n        slicerMatched[2].matched = 1;\n        slicerMatched[2].matchKeyword =\n          slicerMatched[2].matchKeyword +\n          secondaryMatched[2].matchKeyword +\n          ', ';\n      }\n\n      const updates = {\n        initialMatched: initialMatched.initialMatched,\n        slicerMatched: slicerMatched,\n        secondaryMatched: secondaryMatched\n      };\n      this.props.childProps.handleEvaluationComplete(updates);\n    }\n  }\n\n  commandingUnitReport() {\n    const { transcript } = this.props.childProps;\n    // this.props.childProps.handleSpeak(transcript);\n    this.commandingUnitEvaluation(transcript);\n    const updates = {\n      commandingUnitComplete: true,\n      transcript: ''\n    };\n    this.props.childProps.handleProcessSpeechComplete(updates);\n  }\n\n  commandingUnitEvaluation(transcript) {\n    let { commandingUnitMatched } = this.props.childProps;\n    if (transcript !== undefined) {\n      const assignedToDictionary = [\n        'assign to',\n        'assign two',\n        'assigned to',\n        'assigned two'\n      ];\n      commandingUnitMatched = commandingUnitMatched.commandingUnitMatched;\n      commandingUnitMatched[0].matched = 1;\n      commandingUnitMatched[0].matchKeyword = transcript;\n\n      assignedToDictionary.forEach((item, i) => {\n        var re = new RegExp(item, 'gi');\n        if (transcript.match(re)) {\n          commandingUnitMatched[1].matched = 1;\n          commandingUnitMatched[1].matchKeyword = transcript;\n        }\n      });\n      const updates = {\n        commandingUnitMatched: commandingUnitMatched\n      };\n      this.props.childProps.handleEvaluationComplete(updates);\n    }\n  }\n\n  processSecondAlarm() {\n    const { incidentCommander, dispatchCenter, alarms } = this.props.childProps;\n    const phrase = `${incidentCommander} from ${dispatchCenter}, your second alarm units are: ${alarms.alarm2}`;\n    this.props.childProps.handleSpeak(phrase);\n    this.props.childProps.handleProcessSpeechComplete({ transcript: '' });\n  }\n\n  includesText(text) {\n    const { transcript } = this.props.childProps;\n    return transcript.toUpperCase().includes(text.toUpperCase());\n  }\n\n  includesAnyText(texts) {\n    let foundAny = false;\n    texts.forEach(text => {\n      if (this.includesText(text)) {\n        foundAny = true;\n      }\n    });\n    return foundAny;\n  }\n\n  includesAllText(texts) {\n    let foundAll = true;\n    texts.forEach(text => {\n      if (!this.includesText(text)) {\n        foundAll = false;\n      }\n    });\n    return foundAll;\n  }\n\n  async decisionOnSpeech(userSpeech, index) {\n    const {\n      alarm2KeywordDictionary,\n      assignKeywordDictionary,\n      parKeywordDictionary,\n      fireAttackDictionary,\n      exposureGroupDictionary,\n      ventGroupDictionary,\n      rickGroupDictionary\n    } = this.state;\n    const { secondAlarm, callingUnits } = this.props.childProps;\n    let {\n      groups,\n      step4Index\n    } = this.props.childProps;\n    console.dir(groups);\n    ///////////////////////LOCAL VARIABLES//////////////////////////////\n    userSpeech = userSpeech.toLowerCase();\n    var checkUserSpeech = 0; //if it is matched\n    var assignKeyword = 0; //Check if assigned keyword is detected\n    var parDetected = 0; //Check if PAR keyword is detected\n    // var nameDetected = 0;       //Check if some name is called\n    var nameIndex = 0; //Index on which it is found\n    //assigned = 0;             //Check if any group is assigned\n    var simpleAssignment = 0; //Simple assignment response\n\n    var i = 0;\n    var goAssignment = 0;\n    var assignKeywordFound = 0;\n    ///////////////////////LOCAL VARIABLES//////////////////////////////\n    // ====================== ALARM 2 ====================== //\n    if (!checkUserSpeech) {\n      checkUserSpeech = this.groupMatching(\n        checkUserSpeech,\n        alarm2KeywordDictionary,\n        userSpeech\n      );\n      if (checkUserSpeech) {\n        console.log('Alarm 2 Response');\n        var phrase = 'Dispatch copies ';\n        secondAlarm.forEach(elem => {\n          phrase += elem + ' ';\n        });\n        this.props.childProps.handleSpeak(\n          phrase,\n          callingUnits[step4Index].voice,\n          5000\n        );\n\n        setTimeout(() => {\n          const updates = {\n            assignmentCheck: 1,\n            transcript: '',\n            alarmTwoIncident: true\n          };\n          this.props.childProps.incidentWithinIncident();\n          this.props.childProps.handleProcessSpeechComplete(updates);\n        }, 5000);\n      }\n    }\n    // ====================== ALARM 2 ====================== //\n\n    // ====================== MULTIPLE GROUPS ====================== //\n    //Check if it doesn't have assignKeyword\n\n    // groups.forEach((element, index) => {\n    //   groups[index].found = 0;\n    //   groups[index].index = 0;\n    //   groups[index].count = 0;\n    // });\n    assignKeywordDictionary.forEach(function(elem) {\n      var re = new RegExp(elem, 'gi');\n      if (userSpeech.match(re)) {\n        assignKeywordFound = 1;\n      }\n    });\n\n    //If not assign keyword\n    if (!assignKeywordFound) {\n      //fireattack check\n      for (i = 0; i < fireAttackDictionary.length; i++) {\n        var re = new RegExp(fireAttackDictionary[i], 'gi');\n        if (userSpeech.match(re)) {\n          groups[0].found = 1;\n          groups[0].count = fireAttackDictionary[i].length;\n          groups[0].index = userSpeech.indexOf(fireAttackDictionary[i]);\n          i = fireAttackDictionary.length;\n        }\n      }\n      i = 0;\n      //exposure group check\n      for (i = 0; i < exposureGroupDictionary.length; i++) {\n        re = new RegExp(exposureGroupDictionary[i], 'gi');\n        if (userSpeech.match(re)) {\n          groups[1].found = 1;\n          groups[1].count = exposureGroupDictionary[i].length;\n          groups[1].index = userSpeech.indexOf(exposureGroupDictionary[i]);\n          i = exposureGroupDictionary.length;\n        }\n      }\n      i = 0;\n      //vent group check\n      for (i = 0; i < ventGroupDictionary.length; i++) {\n        re = new RegExp(ventGroupDictionary[i], 'gi');\n        if (userSpeech.match(re)) {\n          groups[2].found = 1;\n          groups[2].count = ventGroupDictionary[i].length;\n          groups[2].index = userSpeech.indexOf(ventGroupDictionary[i]);\n          i = ventGroupDictionary.length;\n        }\n      }\n      i = 0;\n      //Rick Group check\n      for (i = 0; i < rickGroupDictionary.length; i++) {\n        re = new RegExp(rickGroupDictionary[i], 'gi');\n        if (userSpeech.match(re)) {\n          groups[3].found = 1;\n          groups[3].count = rickGroupDictionary[i].length;\n          groups[3].index = userSpeech.indexOf(rickGroupDictionary[i]);\n          i = rickGroupDictionary.length;\n        }\n      }\n    }\n\n    var keyWordLength = 10000;\n    var indexOfKeyword = 1000;\n    var indexofGroup = 5;\n    var countKeywords = 0;\n    i = 0;\n    groups.forEach(elem => {\n      if (indexOfKeyword > elem.index && elem.found === 1) {\n        keyWordLength = elem.count;\n        indexOfKeyword = elem.index;\n        indexofGroup = i;\n      }\n      i++;\n      if (elem.found) countKeywords++;\n    });\n\n    if (countKeywords > 1) {\n      var sub = userSpeech.substring(0, indexOfKeyword + keyWordLength);\n      userSpeech = sub;\n      if (!groups[indexofGroup].assigned) {\n        //Dont go to assignment\n        goAssignment = 1;\n      }\n    }\n    // ====================== MULTIPLE GROUPS ====================== //\n\n    // ====================== ASSIGN ====================== //\n    if (!checkUserSpeech && !goAssignment) {\n      assignKeywordDictionary.forEach(function(elem) {\n        var re = new RegExp(elem, 'gi');\n        if (userSpeech.match(re)) {\n          checkUserSpeech = 0; //Because not to break condition if found\n          assignKeyword = 1;\n        }\n      });\n      if (assignKeyword) {\n        console.log('Assign keyword detected');\n      }\n    }\n    // ====================== ASSIGN ====================== //\n\n    // ====================== PAR REPORT ====================== //\n    if (!checkUserSpeech) {\n      parKeywordDictionary.forEach(function(elem) {\n        var re = new RegExp(elem, 'gi');\n        if (userSpeech.match(re)) {\n          checkUserSpeech = 0;\n          parDetected = 1;\n        }\n      });\n      if (parDetected) {\n        //Check if it is not already assigned to someone\n        console.log('PAR keyword detected');\n      }\n    }\n    // ====================== PAR REPORT ====================== //\n\n    // ====================== FIRE ATTACK ====================== //\n    if (!checkUserSpeech) {\n      checkUserSpeech = await this.groupMatching(\n        checkUserSpeech,\n        fireAttackDictionary,\n        userSpeech\n      );\n      let obj = await this.groupAssignment(\n        checkUserSpeech,\n        groups,\n        0,\n        index,\n        parDetected,\n        callingUnits,\n        simpleAssignment,\n        assignKeyword,\n        step4Index\n      );\n      checkUserSpeech = obj.checkUserSpeech;\n      groups = obj.groups;\n      index = obj.parDetected;\n      simpleAssignment = obj.simpleAssignment;\n      assignKeyword = obj.assignKeyword;\n      parDetected = obj.parDetected;\n      step4Index = obj.step4Index;\n    }\n    // ====================== FIRE ATTACK ====================== //\n\n    // ====================== EXPOSURE GROUP ====================== //\n    if (!checkUserSpeech) {\n      checkUserSpeech = await this.groupMatching(\n        checkUserSpeech,\n        exposureGroupDictionary,\n        userSpeech\n      );\n      let obj = await this.groupAssignment(\n        checkUserSpeech,\n        groups,\n        1,\n        index,\n        parDetected,\n        callingUnits,\n        simpleAssignment,\n        assignKeyword,\n        step4Index\n      );\n      checkUserSpeech = obj.checkUserSpeech;\n      groups = obj.groups;\n      index = obj.parDetected;\n      simpleAssignment = obj.simpleAssignment;\n      assignKeyword = obj.assignKeyword;\n      parDetected = obj.parDetected;\n      step4Index = obj.step4Index;\n    }\n    // ====================== EXPOSURE GROUP ====================== //\n\n    // ====================== VENTILATION GROUP ====================== //\n    if (!checkUserSpeech) {\n      checkUserSpeech = await this.groupMatching(\n        checkUserSpeech,\n        ventGroupDictionary,\n        userSpeech\n      );\n      let obj = await this.groupAssignment(\n        checkUserSpeech,\n        groups,\n        2,\n        index,\n        parDetected,\n        callingUnits,\n        simpleAssignment,\n        assignKeyword,\n        step4Index\n      );\n      checkUserSpeech = obj.checkUserSpeech;\n      groups = obj.groups;\n      index = obj.parDetected;\n      simpleAssignment = obj.simpleAssignment;\n      assignKeyword = obj.assignKeyword;\n      parDetected = obj.parDetected;\n      step4Index = obj.step4Index;\n    }\n    // ====================== VENTILATION GROUP ====================== //\n\n    // ====================== RIC GROUP ====================== //\n    if (!checkUserSpeech) {\n      checkUserSpeech = await this.groupMatching(\n        checkUserSpeech,\n        rickGroupDictionary,\n        userSpeech\n      );\n      let obj = await this.groupAssignment(\n        checkUserSpeech,\n        groups,\n        3,\n        index,\n        parDetected,\n        callingUnits,\n        simpleAssignment,\n        assignKeyword,\n        step4Index\n      );\n      checkUserSpeech = obj.checkUserSpeech;\n      groups = obj.groups;\n      index = obj.parDetected;\n      simpleAssignment = obj.simpleAssignment;\n      assignKeyword = obj.assignKeyword;\n      parDetected = obj.parDetected;\n      step4Index = obj.step4Index;\n    }\n    // ====================== RIC GROUP ====================== //\n\n    // ====================== NAME DETECTION ====================== //\n    if (!checkUserSpeech) {\n      groups.forEach((elem, index) => {\n        nameIndex = index;\n        if (elem.assigned) {\n          var assignedName = elem.assigned_to;\n          assignedName.forEach((name, index2) => {\n            var re = new RegExp(name.toLowerCase(), 'gi');\n            if (userSpeech.toLowerCase().match(re)) {\n              checkUserSpeech = 1;\n              console.log('Name detected');\n            }\n          });\n        }\n      });\n      if (checkUserSpeech) {\n        //Check if it is not already assigned to someone\n        this.giveResponse(nameIndex, assignKeyword, parDetected);\n        groups[nameIndex].response = 1;\n        step4Index--;\n      }\n    }\n    // ====================== NAME DETECTION ====================== //\n\n    // ====================== NOTHING ====================== //\n    if (!checkUserSpeech) {\n      console.log('Nothing Detected');\n      await this.changeKeywords(this.props.childProps.transcript);\n      const newStep4Index = step4Index + 1;\n      const updates = {\n        step4Index: newStep4Index,\n        assignmentCheck: 0,\n        transcript: '',\n        wait: 0\n      };\n      this.props.childProps.handleProcessSpeechComplete(updates);\n      this.props.childProps.handleSpeak(\n        this.state.userSpeechChanged,\n        callingUnits[step4Index].voice,\n        5000\n      );\n    }\n  }\n\n  async giveResponse(id, assignKeyword, parDetected, simpleAssignment) {\n    const { userSpeechChanged } = this.state;\n    const {\n      callingUnits,\n      transcript,\n      step4Index\n    } = this.props.childProps;\n\n    if (parDetected) {\n      var phrase = 'All personnel are present and accounted for';\n\n      const updates = {\n        assignmentCheck: 1,\n        parSpeech: transcript,\n        transcript: '',\n        wait: 1\n      };\n      this.props.childProps.handleProcessSpeechComplete(updates);\n      this.props.childProps.handleSpeak(\n        phrase,\n        callingUnits[step4Index].voice,\n        5000\n      );\n    } else if (assignKeyword) {\n      console.log('In assign keyword response function');\n      await this.changeKeywords(transcript);\n\n      phrase =\n        callingUnits[step4Index].name + 'copies' + this.state.userSpeechChanged;\n      //phrase = 'Assigned keyword detected';\n      const newStep4Index = step4Index + 1;\n      const updates = {\n        step4Index: newStep4Index,\n        assignmentCheck: 0,\n        transcript: '',\n        wait: 0\n      };\n      this.props.childProps.handleProcessSpeechComplete(updates);\n      this.props.childProps.handleSpeak(\n        this.state.userSpeechChanged,\n        callingUnits[step4Index].voice,\n        5000\n      );\n    } else if (simpleAssignment) {\n      phrase = callingUnits[step4Index].name + 'copies' + userSpeechChanged;\n      await this.changeKeywords(transcript);\n      const newStep4Index = step4Index + 1;\n      let { slicerMatched, rectoMatched } = this.props.childProps;\n      if (id === 0) {\n        slicerMatched[3].matched = 1;\n        slicerMatched[3].matchKeyword = 'Fire Attack';\n        slicerMatched[4].matched = 1;\n        slicerMatched[4].matchKeyword = 'Fire Attack';\n        rectoMatched[2].matched = 1;\n        rectoMatched[2].matchKeyword = 'Fire Attack';\n        rectoMatched[3].matched = 1;\n        rectoMatched[3].matchKeyword = 'Fire Attack';\n      }\n\n      const updates = {\n        step4Index: newStep4Index,\n        assignmentCheck: 0,\n        transcript: '',\n        wait: 0\n      };\n      this.props.childProps.handleProcessSpeechComplete(updates);\n      setTimeout(() => {\n        this.props.childProps.handleSpeak(\n          this.state.userSpeechChanged,\n          callingUnits[step4Index].voice,\n          5000\n        );\n      }, 1000);\n    } else {\n      console.log('=============Group Id is : ' + id + '=============');\n      //0: Fire Attack  1: Exposure Group    2: Vent Group   3: Rick Group     4: Simple Response\n      let phrase;\n      if (id === 0)\n        phrase =\n          'The building is withstanding the insult, we are advancing and we do not need any additional resources at this time.';\n      if (id === 1)\n        phrase =\n          'The exposure is withstanding the insult, we are protecting the exposures and we do not need any additional resources at this time.';\n      if (id === 2)\n        phrase =\n          'The building is withstanding the insult, we are ventilating and we could use additional resources.';\n      if (id === 3)\n        phrase =\n          'We are in position and are softening the building. All IDLH resources are located, we do not need any additional resources.';\n\n      const updates = {\n        assignmentCheck: 1,\n        transcript: '',\n        wait: 1\n      };\n      \n      this.props.childProps.handleProcessSpeechComplete(updates);\n      console.log(phrase);\n      this.props.childProps.handleSpeak(\n        phrase,\n        callingUnits[step4Index].voice,\n        5000\n      );\n    }\n  }\n\n  async changeKeywords(userSpeech) {\n    var mapObj = {\n      'You will': 'I will',\n      'you will': 'I will',\n      'You are': 'I am',\n      'you are': 'I am',\n      'Your': 'my',\n      'your': 'my',\n      'we have': 'there are',\n      'We have': 'there are',\n      'Let me know': 'Ok I will let you know',\n      'let me know': 'Ok I will let you know'\n    };\n    var changeSpeech = userSpeech.replace(\n      /you will|you are|your|we have/gi,\n      matched => {\n        return mapObj[matched];\n      }\n    );\n    this.setState({ userSpeechChanged: changeSpeech });\n  }\n\n  groupMatching(checkUserSpeech, groupDictionary, userSpeech) {\n    groupDictionary.forEach(function(elem) {\n      var re = new RegExp(elem, 'gi');\n      if (userSpeech.match(re)) {\n        checkUserSpeech = 1;\n      }\n    });\n    return checkUserSpeech;\n  }\n\n  async groupAssignment(\n    checkUserSpeech,\n    groups,\n    groupId,\n    index,\n    parDetected,\n    callingUnits,\n    simpleAssignment,\n    assignKeyword,\n    step4Index\n  ) {\n    if (checkUserSpeech) {\n      //Check if it is not already assigned to someone\n      if (!groups[groupId].assigned && !parDetected) {\n        // Simple assignment\n        callingUnits[index].group = 'Fire attack';\n        groups[groupId].assigned_to.push(callingUnits[step4Index].name);\n        groups[groupId].assigned = 1;\n        // userAssignTranscript();\n        simpleAssignment = 1;\n\n        //EVALUATION//\n        let { slicerMatched, rectoMatched } = this.props.childProps;\n        slicerMatched = slicerMatched.slicerMatched;\n        rectoMatched = rectoMatched.rectoMatched;\n\n        if (groupId === 0) {\n          slicerMatched[3].matched = 1;\n          slicerMatched[3].matchKeyword = 'Fire Attack';\n          slicerMatched[4].matched = 1;\n          slicerMatched[4].matchKeyword = 'Fire Attack';\n          rectoMatched[2].matched = 1;\n          rectoMatched[2].matchKeyword = 'Fire Attack';\n          rectoMatched[3].matched = 1;\n          rectoMatched[3].matchKeyword = 'Fire Attack';\n        }\n\n        if (groupId === 1) {\n          rectoMatched[1].matched = 1;\n          rectoMatched[1].matchKeyword = 'Exposure Group';\n        }\n\n        if (groupId === 2) {\n          rectoMatched[5].matched = 1;\n          rectoMatched[5].matchKeyword = 'Ventilation Group';\n        }\n\n        const { evaluationUpdate } = {\n          slicerMatched,\n          rectoMatched\n        };\n\n        this.props.childProps.handleEvaluationComplete(evaluationUpdate);\n        //EVALUATION//\n\n        console.log(\n          `${groups[groupId].name} assigned to ${callingUnits[step4Index].name}`\n        );\n        this.giveResponse(4, assignKeyword, parDetected, simpleAssignment);\n      } else {\n        // IF PAR AND ALREADY ASSIGNED\n        if (!parDetected) {\n          //If assigned\n          if (groups[groupId].assigned && !assignKeyword) {\n            groups[groupId].response = 1;\n            this.giveResponse(groupId, assignKeyword, parDetected);\n            step4Index--;\n          } else {\n            // IF ASSIGNED\n            console.log(`${groups[groupId]} assigned with assign keyword`);\n            groups[groupId].assigned_to.push(callingUnits[index].name);\n            groups[groupId].assigned = 1;\n            this.giveResponse(groupId, assignKeyword, parDetected);\n            // userAssignTranscript();\n          }\n        } else {\n          //GROUP PAR\n          console.log('I am in par function to call response');\n          //EVALUATION//\n          let { processArrivalMatched, transcript } = this.props.childProps;\n          processArrivalMatched[0] = {};\n          processArrivalMatched[0].matched = 1;\n          processArrivalMatched[0].matchKeyword = transcript;\n          const evaluationUpdate = {\n            processArrivalMatched: processArrivalMatched\n          };\n          this.props.childProps.handleEvaluationComplete(evaluationUpdate);\n          //EVALUATION//\n          this.giveResponse(groupId, assignKeyword, parDetected);\n          step4Index--;\n        }\n      }\n    }\n    return {\n      checkUserSpeech,\n      groups,\n      index,\n      simpleAssignment,\n      assignKeyword,\n      parDetected,\n      step4Index\n    };\n  }\n\n  arrivalEvaluation() {\n    const { groups } = this.props;\n    let { slicerMatched, rectoMatched } = this.props;\n    console.dir(groups);\n    if (groups[0].assigned === 1) {\n\n      slicerMatched[3].matched = 1;\n      slicerMatched[3].matchKeyword = 'Fire Attack';\n      slicerMatched[4].matched = 1;\n      slicerMatched[4].matchKeyword = 'Fire Attack';\n      rectoMatched[2].matched = 1;\n      rectoMatched[2].matchKeyword = 'Fire Attack';\n      rectoMatched[3].matched = 1;\n      rectoMatched[3].matchKeyword = 'Fire Attack';\n    }\n\n    if (groups[1].assigned) {\n      rectoMatched[1].matched = 1;\n      rectoMatched[1].matchKeyword = 'Exposure Group';\n    }\n\n    if (groups[2].assigned) {\n      rectoMatched[5].matched = 1;\n      rectoMatched[5].matchKeyword = 'Ventilation Group';\n    }\n\n    const updates = {\n      rectoMatched: rectoMatched,\n      slicerMatched: slicerMatched\n    };\n    this.props.handleEvaluationComplete(updates);\n  }\n\n  render() {\n    return <div />;\n  }\n}\n","import React, { Component } from 'react';\nimport { Predictions } from 'aws-amplify';\n\nexport default class TextToSpeech extends Component {\n  state = {\n    textToGenerateSpeech: ''\n  };\n\n  componentDidMount() {\n    console.log('TextToSpeech()');\n    const { phrases } = this.props;\n    let phrase = '';\n    if (phrases instanceof Array) {\n      phrase = phrases.join(' ').trim();\n    } else {\n      phrase = phrases;\n    }\n\n    this.setState({ textToGenerateSpeech: phrase }, () => {\n      this.generateTextToSpeech();\n    });\n  }\n\n  generateTextToSpeech() {\n    const { textToGenerateSpeech } = this.state;\n    const { voiceId } = this.props;\n\n    Predictions.convert({\n      textToSpeech: {\n        source: {\n          text: textToGenerateSpeech\n        },\n        voiceId: voiceId // default configured on aws-exports.js\n        // list of different options are here https://docs.aws.amazon.com/polly/latest/dg/voicelist.html\n      }\n    })\n      .then(result => {\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        const audioCtx = new AudioContext();\n        const source = audioCtx.createBufferSource();\n        audioCtx.decodeAudioData(\n          result.audioStream,\n          buffer => {\n            source.buffer = buffer;\n            source.connect(audioCtx.destination);\n            source.start(0);\n            setTimeout(() => {\n              this.props.handleSpeechComplete();\n            }, (buffer.duration + 1) * 1000);\n          },\n          err => console.log({ err })\n        );\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className='TextToSpeech' style={{ visibility: 'hidden' }}></div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Evaluation extends Component {\n  state = {\n    totalScore: 0,\n    parSpeechKeyword: '',\n    parSpeechScore: 0\n  };\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      initialSpeech,\n      secondarySpeech,\n      initialMatched,\n      secondaryMatched,\n      slicerMatched,\n      rectoMatched,\n      processArrivalMatched,\n      commandingUnitMatched,\n      parSpeech\n    } = this.props;\n    let { totalScore, parSpeechKeyword, parSpeechScore } = this.state;\n    let initialKeywords = [];\n    let initialScore = [];\n    \n    initialMatched.forEach((item, index) => {\n      initialKeywords[index] = item.matchKeyword;\n      initialScore[index] = 0;\n      if (item.matched) {\n        initialScore[index] = 5;\n        totalScore = totalScore + 5;\n      }\n    });\n\n    let secondaryKeywords = [];\n    let secondaryScore = [];\n    secondaryMatched.forEach((item, index) => {\n      secondaryKeywords[index] = item.matchKeyword;\n      secondaryScore[index] = 0;\n      if (item.matched) {\n        secondaryScore[index] = 5;\n        totalScore = totalScore + 5;\n      }\n    });\n\n    let slicerKeywords = [];\n    let slicerScore = [];\n    slicerMatched.forEach((item, index) => {\n      slicerKeywords[index] = item.matchKeyword;\n      slicerScore[index] = 0;\n      if (item.matched) {\n        slicerScore[index] = 5;\n        totalScore = totalScore + 5;\n      }\n    });\n\n    let rectoKeywords = [];\n    let rectoScore = [];\n    rectoMatched.forEach((item, index) => {\n      rectoKeywords[index] = item.matchKeyword;\n      rectoScore[index] = 0;\n      if (item.matched) {\n        rectoScore[index] = 5;\n        totalScore = totalScore + 5;\n      }\n    });\n\n    let processArrivalKeywords = [];\n    let processArrivalScore = [];\n    processArrivalMatched.forEach((item, index) => {\n      processArrivalKeywords[index] = item.matchKeyword;\n      processArrivalScore[index] = 0;\n      if (item.matched) {\n        processArrivalScore[index] = 5;\n        totalScore = totalScore + 5;\n      }\n    });\n\n    let commandingUnitKeyword = [];\n    let commandingUnitScore = [];\n    commandingUnitMatched.forEach((item, index) => {\n      commandingUnitKeyword[index] = item.matchKeyword;\n      commandingUnitScore[index] = 0;\n      if (item.matched) {\n        commandingUnitScore[index] = 5;\n        totalScore = totalScore + 5;\n      }\n    });\n    parSpeechKeyword = '';\n    parSpeechScore = 0;\n    if(parSpeech) {\n      parSpeechKeyword = parSpeech;\n      parSpeechScore = 5;\n      totalScore = totalScore + 5;\n    }\n\n    return (\n      <div>\n        <h2 className=\"text-center\">Evaluation</h2>\n        <br/>\n        <h4 className=\"text-center\">Total Score : {totalScore}</h4>\n        <div className='text-left pl-3 pr-3 pt-3'>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>1. Did your initial report include the size of the building?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span>{initialSpeech}</span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{initialKeywords[0]}</b> </span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {initialScore[0]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>2. Did your initial report include the height of the building?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span>{initialSpeech}</span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{initialKeywords[1]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {initialScore[1]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>3. Did your initial report include the occupancy of the building?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span>{initialSpeech}</span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{initialKeywords[2]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {initialScore[2]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>4. Did your initial report include witnessed conditions?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span>{initialSpeech}</span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{initialKeywords[3]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {initialScore[3]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>5. Did your initial report include your initial actions?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span>{initialSpeech}</span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{initialKeywords[4]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {initialScore[4]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>6. Did your initial report include your resource needs for this incident?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span>{initialSpeech}</span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{initialKeywords[5]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {initialScore[5]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>7. Did you establish command and give a command post location?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span>{initialSpeech}</span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{initialKeywords[6]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {initialScore[6]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>8. Did you address a 360° assessment? Did your 360° address design and construction features?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span>{initialSpeech}</span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{initialKeywords[7]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {initialScore[7]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>9. Did your 360° address entry and egress points?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span>{secondarySpeech}</span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{secondaryKeywords[0]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {secondaryScore[0]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>10. Did your 360° address conditions found?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span>{secondarySpeech}</span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{secondaryKeywords[1]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {secondaryScore[1]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>11. Did your 360°-address interior fire travel path? Where has, the fire been? Where is, it going?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span>{secondarySpeech}</span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{secondaryKeywords[2]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {secondaryScore[2]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>12. Did your 360° address a survivability profile?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span>{secondarySpeech}</span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{secondaryKeywords[3]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {secondaryScore[3]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>13. Did your 360° redefine your incident priorities?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b></b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: </span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>14 Did your sequential actions include size “SLICERS”?</h5>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>S : <b> {slicerKeywords[0]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {slicerScore[0]} </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>L : <b> {slicerKeywords[1]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {slicerScore[1]} </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>I : <b> {slicerKeywords[2]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {slicerScore[2]} </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>C : <b> {slicerKeywords[3]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {slicerScore[3]} </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>E : <b> {slicerKeywords[4]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {slicerScore[4]} </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>R : <b> {slicerKeywords[5]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {slicerScore[5]} </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>S : <b> {slicerKeywords[6]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {slicerScore[6]} </span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>15 Did your tactical objectives address: “RECEO-VS\"\"? Rescue, Exposures, Confinement, Extinguishment, Overhaul, Ventilation, Salvage. </h5>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>S : <b> {rectoKeywords[0]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {rectoScore[0]} </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>L : <b> {rectoKeywords[1]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {rectoScore[1]} </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>I : <b> {rectoKeywords[2]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {rectoScore[2]} </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>C : <b> {rectoKeywords[3]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {rectoScore[3]} </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>E : <b> {rectoKeywords[4]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {rectoScore[4]} </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>R : <b> {rectoKeywords[5]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {rectoScore[5]} </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <span>S : <b> {rectoKeywords[6]} </b></span>\n            </div>\n            <div className=\"col-md-4\">\n              <span> User Score: {rectoScore[6]} </span>\n            </div>\n          </div>\n          <br/> \n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>16. Were you prepared for the incident within the incident with an effective command structure and resources?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b></b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: </span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>17. Did you do periodic Personnel Accountability Reports?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span>Keyword: <b>{parSpeechKeyword}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'> User Score: {parSpeechScore}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>18. Did you give an effective transfer of command report?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span><b>{commandingUnitKeyword[0]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'>  User Score: {commandingUnitScore[0]}</span>\n            </div>\n          </div>\n          <br/>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>19. Did your transfer of command report include assignments?</h5>\n            </div>\n            <div className=\"col-md-12\">\n              <span><b>{commandingUnitKeyword[1]}</b></span>\n            </div>\n            <div className=\"col-md-2\">\n              <span className='text-black'>  User Score: {commandingUnitScore[1]}</span>\n            </div>\n          </div>\n          <br/>\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { API } from 'aws-amplify';\n//import Videos from './Videos/Videos';\n//import VideoCanvas from './VideoCanvas/VideoCanvas';\nimport TextCanvas from './TextCanvas/TextCanvas';\nimport './Evolution.css';\nimport playButton from './play.svg';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport ProcessSpeech from './ProcessSpeech/ProcessSpeech';\nimport { education } from './Education/Education';\nimport SpeechToText from './SpeechToText/SpeechToText';\nimport TextToSpeech from './TextToSpeech/TextToSpeech';\n// import TextToInterpret from './TextToInterpret/TextToInterpret';\nimport Evaluation from './Evaluation/Evaluation';\n\nexport default class Evolution extends Component {\n  state = {\n    isLoadingEvolution: true,\n    alarms: null,\n    firstAlarm: [],\n    secondAlarm: [],\n    chief: '',\n    evolution: null,\n    videos: [],\n    timerId: null,\n    isPlaying: false,\n    preloadedVideoCount: 0,\n    currentVideo: null,\n    scrollText: [],\n    speakPhrases: [],\n    speakVoice: 'Kendra',\n    speakTimeout: 0,\n    step: 1,\n    transcript: '',\n    recognition: null,\n    speechRecognitionResult: '',\n    isSpeaking: true,\n    canTalk: false,\n    videosLoaded: 0,\n    preloadPercentage: 0,\n    initialSpeech: '',\n    secondarySpeech: '',\n    //STEPS\n    dispatchInfoComplete: false, //Step 1\n    initialReportComplete: false, //Step 2\n    threeSixtyComplete: false, //Step 3\n    startArrival: false, //Step 4 Starting\n    arrivalsComplete: false, //Step 4 Complete\n    assignmentsComplete: false, //Step 4 Complete\n    faceToFaceRequestComplete: false, //Step 5 Request\n    faceToFaceComplete: false, //Step 5 Complete\n    commandingUnitRequest: false, //Step 6 Request\n    commandingUnitComplete: false, //Step 6 Complete\n    educationRequest: false, //Step 7 Request\n    educationComplete: false, //Step 7 Complete\n    evaluationComplete: false,\n\n    flag: true,\n    assignmentCheck: 0,\n    initialCheck: 0,\n    finalJsonOutput: [],\n    finalJsonOutputIndex: 0,\n    parSpeech: '',\n    groups: [],\n    callingUnits: [],\n    step4Index: 0,\n    step4Speak: false,\n    wait: false,\n    initialMatched: [], //QUESTION 1-8\n    secondaryMatched: [], //QUESTION 9-12\n    processArrivalMatched: [], //QUESTION 18\n    slicerMatched: [], //QUESTION 14\n    rectoMatched: [], //QUESTION 15\n    commandingUnitMatched: [], //QUESTION 17,19\n    isEvaluation: false,\n    alarmTwoIncident: false,\n    incidentReportRequest: false,\n    isRecording: false,\n    endRecording: false,\n    evaluationPage: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.canvasContainer = React.createRef();\n    this.videoCanvas = React.createRef();\n    this.intro = React.createRef();\n    this.dispatch = React.createRef();\n    this.dispatchLoop = React.createRef();\n    this.approach = React.createRef();\n    this.alphaIntro = React.createRef();\n    this.bravo = React.createRef();\n    this.charlie = React.createRef();\n    this.delta = React.createRef();\n    this.alpha = React.createRef();\n    this.alphaLoop = React.createRef();\n    this.credits = React.createRef();\n    this.fps = 30;\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.id) {\n      try {\n        const evolution = await this.getEvolution(this.props.match.params.id);\n        this.setState(\n          { evolution: evolution, isLoadingEvolution: false },\n          async () => {\n            this.getVideos();\n            await this.setupAlarms();\n            await this.loadVariables();\n            this.setupIncidentCommander();\n          }\n        );\n      } catch (e) {\n        alert(e.message);\n        this.setState({ isLoadingEvolution: false });\n      }\n    }\n    document.addEventListener('keydown', this.handleKeyDown.bind(this));\n    document.addEventListener('keyup', this.handleKeyUp.bind(this));\n  }\n\n  componentWillUnmount() {\n    const { evaluationPage } = this.state;\n    if (!evaluationPage)\n      this.stopTimer();\n  }\n\n  async loadVariables() {\n    const groupNames = [\n      'Fire Attack',\n      'Exposure Group',\n      'Ventilation Group',\n      'RIC Group'\n    ];\n    const {\n      groups,\n      firstAlarm,\n      callingUnits,\n      initialMatched,\n      secondaryMatched,\n      slicerMatched,\n      rectoMatched,\n      commandingUnitMatched,\n      processArrivalMatched\n    } = this.state;\n\n    groupNames.forEach((element, index) => {\n      groups[index] = [];\n      groups[index].name = element;\n      groups[index].response = 0;\n      groups[index].assigned = 0;\n      groups[index].assigned_to = [];\n      //For double assignment\n      groups[index].found = 0;\n      groups[index].index = 0;\n      groups[index].count = 0;\n    });\n    firstAlarm.forEach((elem, index) => {\n      callingUnits[index] = [];\n      callingUnits[index].name = elem;\n      callingUnits[index].group = '';\n      callingUnits[index].voice = this.assignRandomVoices(8); //8 because we have 8 voices\n    });\n    /////////////////EVALUATION VARIABLES/////////////////\n    for (var i = 0; i < 8; i++) {\n      initialMatched[i] = {};\n      initialMatched[i].matched = 0;\n      initialMatched[i].matchKeyword = '';\n    }\n\n    for (i = 0; i < 4; i++) {\n      secondaryMatched[i] = {};\n      secondaryMatched[i].matched = 0;\n      secondaryMatched[i].matchKeyword = '';\n    }\n\n    for (i = 0; i <= 6; i++) {\n      slicerMatched[i] = {};\n      slicerMatched[i].matched = 0;\n      slicerMatched[i].matchKeyword = '';\n\n      rectoMatched[i] = {};\n      rectoMatched[i].matched = 0;\n      rectoMatched[i].matchKeyword = '';\n    } //Initialize SLICER and RECTO-VS array\n\n    for (i = 0; i <= 1; i++) {\n      commandingUnitMatched[i] = {};\n      commandingUnitMatched[i].matched = 0;\n      commandingUnitMatched[i].matchKeyword = '';\n    }\n\n    processArrivalMatched[0] = {};\n    processArrivalMatched[0].matched = 0;\n    processArrivalMatched[0].matchKeyword = '';\n    /////////////////EVALUATION VARIABLES/////////////////\n\n    this.setState({\n      groups: groups,\n      callingUnits: callingUnits,\n      secondaryMatched: secondaryMatched,\n      initialMatched: initialMatched,\n      slicerMatched: slicerMatched,\n      rectoMatched: rectoMatched,\n      commandingUnitMatched: commandingUnitMatched\n    });\n  }\n\n  assignRandomVoices = max => {\n    const voices = [\n      'Salli',\n      'Joanna',\n      'Ivy',\n      'Kendra',\n      'Kimberly',\n      'Matthew',\n      'Justin',\n      'Joey'\n    ];\n\n    const random = Math.floor(Math.random() * Math.floor(max));\n    return voices[random];\n  };\n\n  async setupAlarms() {\n    try {\n      const alarms = await this.getAlarms();\n      let firstAlarm = alarms.alarm1.split(',').map(alarm => alarm.trim());\n      let secondAlarm = alarms.alarm2.split(',').map(alarm => alarm.trim());\n      firstAlarm.shift();\n      const chief = firstAlarm.pop();\n      this.setState(\n        {\n          alarms: alarms,\n          firstAlarm: firstAlarm,\n          secondAlarm: secondAlarm,\n          chief: chief\n        },\n        () => {\n          this.shuffleFirstAlarm();\n        }\n      );\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n\n  shuffleFirstAlarm() {\n    let { firstAlarm } = this.state;\n    for (let i = firstAlarm.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [firstAlarm[i], firstAlarm[j]] = [firstAlarm[j], firstAlarm[i]];\n    }\n    this.setState({ firstAlarm: firstAlarm });\n  }\n\n  setupIncidentCommander() {\n    const { evolution } = this.state;\n    const street = evolution.street.replace(/[0-9]/g, '').trim();\n    const incidentCommander = `${street} IC`;\n    this.setState({ incidentCommander: incidentCommander });\n  }\n\n  getEvolution(id) {\n    return API.get('comtac', `/evolutions/${id}`);\n  }\n\n  getAlarms() {\n    return API.get('comtac', '/alarms');\n  }\n\n  getVideos = async () => {\n    // console.log('getVideos()');\n    const { evolution } = this.state;\n    const bucket = 'https://s3-us-west-2.amazonaws.com/ctt-video/';\n    const fileType = '.mp4';\n    const videos = [\n      {\n        id: 'intro',\n        src: bucket + evolution.intro + fileType,\n        next: 'dispatchLoop'\n      },\n      {\n        id: 'dispatchLoop',\n        src: bucket + 'CTT Dispatch no label' + fileType,\n        next: 'dispatchLoop'\n      },\n      {\n        id: 'approach',\n        src: bucket + evolution.approach + fileType,\n        next: 'alphaIntro'\n      },\n      {\n        id: 'alphaIntro',\n        src: bucket + evolution.loop + fileType,\n        next: 'bravo'\n      },\n      {\n        id: 'bravo',\n        src: bucket + evolution.bravo + fileType,\n        next: 'charlie'\n      },\n      {\n        id: 'charlie',\n        src: bucket + evolution.charlie + fileType,\n        next: 'delta'\n      },\n      { id: 'delta', src: bucket + evolution.delta + fileType, next: 'alpha' },\n      {\n        id: 'alpha',\n        src: bucket + evolution.alpha + fileType,\n        next: 'alphaLoop'\n      },\n      {\n        id: 'alphaLoop',\n        src: bucket + evolution.loop + fileType,\n        next: 'alphaLoop'\n      },\n      { id: 'credits', src: bucket + 'Credits' + fileType, next: '' }\n    ];\n    this.setState({ videos: videos }, this.preloadVideos);\n  };\n\n  preloadVideos() {\n    // console.log('preloadVideos()');\n    const { videos } = this.state;\n    videos.forEach(video => {\n      this.preloadVideo(video);\n    });\n  }\n\n  preloadVideo(video) {\n    // console.log('preloadVideo()');\n    const vidRef = this[video.id].current;\n    fetch(video.src, { mode: 'cors' })\n      .then(response => response.blob())\n      .then(videoBlob => {\n        const videoObject = window.URL.createObjectURL(videoBlob);\n        vidRef.src = videoObject;\n        this.updateVideosLoaded();\n      });\n  }\n\n  updateVideosLoaded() {\n    // console.log('updateVideosLoaded()');\n    const { videosLoaded, videos } = this.state;\n    const newVideosLoaded = videosLoaded + 1;\n    const preloadPercentage = Math.floor(\n      (newVideosLoaded / videos.length) * 100\n    );\n    this.setState({\n      videosLoaded: newVideosLoaded,\n      preloadPercentage: preloadPercentage\n    });\n  }\n\n  stopTimer() {\n    // console.log('stopTimer()');\n    const { timerId } = this.state;\n    window.clearInterval(timerId);\n  }\n\n  drawImage(video) {\n    // console.log('drawImage()');\n    const { evaluationPage } = this.state;\n    if(!evaluationPage){\n      const canvas = this.videoCanvas.current;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    }\n  }\n\n  loadVideo(video) {\n    // console.log('loadVideo()');\n    const timerId = window.setInterval(() => {\n      this.drawImage(video);\n    }, this.fps);\n    this.setState({ timerId: timerId });\n  }\n\n  handlePlay = event => {\n    // console.log('handlePlay()');\n    this.loadVideo(event.target);\n  };\n\n  handleEnded = next => event => {\n    // console.log('HandleEnded()');\n    const { scrollText } = this.state;\n    if (scrollText.length === 0 && next === 'dispatchLoop') {\n      this.setDispatchText();\n    }\n    const video = this[next].current;\n    this.stopTimer();\n    video.play();\n    this.setState({ currentVideo: next });\n  };\n\n  handleLoadedData = id => event => {\n    // console.log('handleLoadedData()');\n    if (id === 'intro') {\n      const intro = this.intro.current;\n      this.drawImage(intro);\n    }\n  };\n\n  handlePlayClicked = () => {\n    // console.log('handlePlayClicked()');\n    const canvas = this.canvasContainer.current;\n    if (canvas.requestFullScreen) {\n      canvas.requestFullScreen();\n    } else if (canvas.webkitRequestFullScreen) {\n      canvas.webkitRequestFullScreen();\n    } else if (canvas.moRequestFullScreen) {\n      canvas.mozRequestFullScreen();\n    }\n\n    const { isPlaying } = this.state;\n    if (!isPlaying) {\n      this.stopTimer();\n      const intro = this.intro.current;\n      intro.play();\n      this.setState({ isPlaying: true });\n    }\n  };\n\n  setDispatchText() {\n    const { alarms, evolution } = this.state;\n    const calls = [\n      'Dispatch has received one call.',\n      'Dispatch has received multiple calls.',\n      'Caller states smoke in the building.',\n      'Caller reports smoke in the area.',\n      'Caller reports everyone is out of the structure.'\n    ];\n    const rand = Math.floor(Math.random() * (calls.length + 1));\n    const simulationName = evolution.category.toLowerCase();\n    let type = '';\n    if (simulationName.includes('family')) {\n      type = 'Residential';\n    } else {\n      type = 'Commercial';\n    }\n    const phrase = `${type} Structure fire, ${alarms.alarm1} at ${evolution.street}.`;\n    const speakPhrase = [phrase, `Repeating. ${phrase}`, calls[rand]];\n    const scrollText = [\n      'Dispatch Information:',\n      phrase,\n      `Repeating. ${phrase}`\n    ];\n    this.setState({ scrollText: scrollText, speakPhrases: speakPhrase });\n  }\n\n  setEducationText() {\n    console.log('setEducationText()');\n    const { alarms, evolution, educationRequest } = this.state;\n    const phrases = education(evolution, alarms);\n    var educationPhrase = '';\n    phrases.forEach(item => {\n      educationPhrase += item;\n    });\n\n    if (!educationRequest) {\n      console.log('1st Chunk');\n      console.log(this.state.speakPhrases);\n      setTimeout(() => {\n        this.setState({\n          educationRequest: true,\n          scrollText: educationPhrase,\n          speakPhrases: educationPhrase.substring(0, 269)\n        }); //0, 2934\n      }, 1500);\n    } else {\n      setTimeout(() => {\n        this.setState({\n          educationComplete: true,\n          speakPhrases: educationPhrase.substring(270, 423)\n        }); //2935, 5590\n      }, 500);\n    }\n  }\n\n  handleDispatchLoopComplete = () => {\n    console.log('handleDispatchLoopComplete()');\n    const dispatchLoop = this.dispatchLoop.current;\n    const approach = this.approach.current;\n    this.setState(\n      {\n        currentVideo: 'approach',\n        scrollText: [],\n        speakPhrases: [],\n        canTalk: true,\n        dispatchInfoComplete: true\n      },\n      () => {\n        this.stopTimer();\n        dispatchLoop.pause();\n        approach.play();\n      }\n    );\n  };\n\n  handleAlphaLoopComplete = () => {\n    console.log('handleAlphaLoopComplete()');\n    const alphaLoop = this.alphaLoop.current;\n    const credits = this.credits.current;\n    this.setState({ currentVideo: 'credits', scrollText: [] }, () => {\n      this.stopTimer();\n      alphaLoop.pause();\n      credits.play();\n    });\n  };\n\n  handleSpeak = (phrases, voice, timeout = 0) => {\n    console.log('handleSpeak()');\n    this.setState({\n      speakPhrases: phrases,\n      speakVoice: voice,\n      speakTimeout: timeout\n    });\n  };\n\n  handleSpeechComplete = () => {\n    console.log('handleSpeechComplete()');\n    const {\n      step,\n      assignmentCheck,\n      startArrival,\n      wait,\n      threeSixtyComplete,\n      step4Index,\n      firstAlarm,\n      dispatchInfoComplete,\n      commandingUnitComplete,\n      educationRequest,\n      faceToFaceComplete,\n      commandingUnitRequest,\n      educationComplete,\n      evaluationComplete\n    } = this.state;\n    let arrivalsComplete = this.state.arrivalsComplete;\n\n    let newStep = step;\n    this.setState({ isSpeaking: true });\n\n    // FOR STEP 1,2,3\n    if (!startArrival && dispatchInfoComplete) {\n      //Increment the step if step is less than 4 and not 1\n      newStep++;\n    }\n\n    // For Step less than 4\n    if (!startArrival) {\n      this.setState({ isSpeaking: true });\n    }\n\n    // When Step 4 is Completed\n    if (step4Index >= firstAlarm.length && !arrivalsComplete) {\n      newStep = 5;\n      arrivalsComplete = true;\n      this.setState({ step: newStep, arrivalsComplete: true });\n    }\n\n    // For Step 4\n    if (threeSixtyComplete && assignmentCheck && !arrivalsComplete && !wait) {\n      // For Calling Decision Function\n      this.setState({ isSpeaking: false });\n    } else if (startArrival && !arrivalsComplete && !assignmentCheck && !wait) {\n      console.log('GOING TO CALL PROCESS ARRIVAL');\n      newStep = 4;\n      this.processArrivals();\n    }\n\n    // For Step 5\n    if (arrivalsComplete && !faceToFaceComplete) {\n      newStep = 6;\n      this.setState({ isSpeaking: true, step: 6 });\n      this.faceToFace();\n    }\n    console.log('New step is ' + newStep);\n    // For Step 6 : Commanding Unit Report\n    if (faceToFaceComplete && !commandingUnitRequest) {\n      this.setState({ canTalk: true, commandingUnitRequest: true });\n    }\n\n    if (commandingUnitRequest && !commandingUnitComplete) {\n      newStep = 7;\n      this.setState({ isSpeaking: false });\n    }\n\n    // When Dispatch Info is Completed\n    if (dispatchInfoComplete && !commandingUnitComplete) {\n      console.log('When Dispatch Info is Completed');\n      this.setState({ canTalk: true });\n    }\n\n    // For Step 7 2nd Chunk\n    if (commandingUnitComplete && educationRequest && !educationComplete) {\n      console.log('For Step 7 2nd Chunk');\n      this.setEducationText();\n    }\n\n    // For Step 8 : Evaluation\n    if (educationComplete && !evaluationComplete) {\n      console.log('For Step 8 : Evaluation');\n      this.setState({ evaluationComplete: true, evaluationPage: true});\n    }\n\n    this.setState({ speakPhrases: [], step: newStep, transcript: '' }, () => {\n      console.log('=========STEP ' + this.state.step + ' ==========');\n    });\n  };\n\n  incidentWithinIncident() {\n    setTimeout(() => {\n      var phrase =\n        'Command from (unit on the interior) we have an excessive amount of ammunition discharging Hall around us we are evacuating';\n      this.handleSpeak(phrase);\n    }, 30000);\n  }\n\n  processArrivals() {\n    const {\n      firstAlarm,\n      step4Index,\n      assignmentCheck,\n      callingUnits\n    } = this.state;\n    if (assignmentCheck === 0) {\n      const phrase = `${firstAlarm[step4Index]} staged and awaiting assignment.`;\n      //this.setState({ speakPhrases: phrase });\n      setTimeout(() => {\n        this.handleSpeak(phrase, callingUnits[step4Index].voice, 5000);\n        this.setState({\n          // assignmentCheck: 1,\n          transcript: '',\n          wait: 1\n        });\n        // this.handleProcessSpeechComplete(updates);\n      }, 500);\n    }\n  }\n\n  faceToFace() {\n    const { chief } = this.state;\n    setTimeout(() => {\n      const phrase = `${chief} requesting face to face`;\n      this.handleSpeak(phrase);\n      this.setState({ faceToFaceComplete: true });\n    }, 1500);\n  }\n\n  handleListenComplete = transcript => {\n    transcript = transcript.split('.').join(\". \");\n    console.log('handleListenComplete()');\n    console.log('--TRANSCRIPT--' + transcript);\n    const {\n      startArrival,\n      commandingUnitComplete,\n      incidentReportRequest\n    } = this.state;\n\n    this.setState({\n      isRecording: false,\n      endRecording: false\n    });\n    if (!startArrival) {\n      this.setState(\n        { transcript: transcript, speakPhrases: transcript },\n        () => {\n          this.setState({ isSpeaking: false });\n        }\n      );\n    } else if (incidentReportRequest) {\n      this.setState({ incidentReportRequest: false });\n    } else if (!commandingUnitComplete) {\n      this.setState({\n        transcript: transcript,\n        step4Speak: true,\n        isSpeaking: false\n      });\n    }\n  };\n\n  handleProcessSpeechComplete = updates => {\n    //const { alarmTwoIncident } = this.state;\n    console.log('handleProcessSpeechComplete()');\n    if (updates.commandingUnitComplete) {\n      this.setEducationText();\n    }\n    this.setState(updates);\n    this.setState({ isEvaluation: true }, () => {\n      if (this.state.alarmTwoIncident) {\n        this.incidentWithinIncident();\n        this.setState({\n          alarmTwoIncident: false,\n          incidentReportRequest: true,\n          canTalk: false\n        });\n      }\n    });\n  };\n\n  handleListenResponse = response => {\n    // const { speechRecognitionResult } = this.state;\n    // const newResult = `${speechRecognitionResult} ${response}`.trim();\n    this.setState({\n      speechRecognitionResult: response,\n      // isSpeaking: false,\n      step4Speak: false\n    });\n  };\n\n  handleKeyDown = event => {\n    const { canTalk } = this.state;\n    if (event.code === 'Space' && canTalk) {\n      event.preventDefault();\n      if (!event.repeat) {\n        this.setState({ isRecording: true });\n      }\n    }\n  };\n\n  handleKeyUp = event => {\n    const { canTalk } = this.state;\n    if (event.code === 'Space' && canTalk) {\n      event.preventDefault();\n      if (!event.repeat) {\n        this.setState({ endRecording: true, canTalk: false });\n      }\n    }\n  };\n\n  handleEvaluationComplete = updates => {\n    this.setState({ isEvaluation: false });\n    this.setState({ updates });\n  };\n\n  render() {\n    const {\n      isLoadingEvolution,\n      videos,\n      isPlaying,\n      currentVideo,\n      scrollText,\n      speakPhrases,\n      speakVoice,\n      speakTimeout,\n      alarms,\n      firstAlarm,\n      chief,\n      incidentCommander,\n      secondAlarm,\n      step,\n      transcript,\n      isSpeaking,\n      preloadPercentage,\n      initialReportComplete,\n      threeSixtyComplete,\n      arrivalsComplete,\n      startArrival,\n      assignmentsComplete,\n      faceToFaceRequestComplete,\n      faceToFaceComplete,\n      commandingUnitComplete,\n      parSpeech,\n      callingUnits,\n      step4Index,\n      assignmentCheck,\n      groups,\n      wait,\n      //Evaluation\n      initialMatched,\n      secondaryMatched,\n      slicerMatched,\n      rectoMatched,\n      processArrivalMatched,\n      commandingUnitMatched,\n\n      alarmTwoIncident,\n      isRecording,\n      endRecording,\n\n      evaluationPage,\n      initialSpeech,\n      secondarySpeech,\n\n    } = this.state;\n    let handleCallback = this.handleDispatchLoopComplete;\n    if (currentVideo === 'alphaLoop') {\n      handleCallback = this.handleAlphaLoopComplete;\n    }\n    let processSpeechChildProps = {};\n    if (alarms) {\n      processSpeechChildProps = {\n        initialReportComplete: initialReportComplete,\n        threeSixtyComplete: threeSixtyComplete,\n        arrivalsComplete: arrivalsComplete,\n        startArrival: startArrival,\n        assignmentsComplete: assignmentsComplete,\n        faceToFaceRequestComplete: faceToFaceRequestComplete,\n        faceToFaceComplete: faceToFaceComplete,\n        commandingUnitComplete: commandingUnitComplete,\n\n        firstAlarm: firstAlarm,\n        chief: chief,\n        alarms: alarms,\n        dispatchCenter: alarms.dispatchCenter,\n        transcript: transcript,\n        incidentCommander: incidentCommander,\n        secondAlarm: secondAlarm,\n        parSpeech: parSpeech,\n        callingUnits: callingUnits,\n        step4Index: step4Index,\n        assignmentCheck: assignmentCheck,\n        groups: groups,\n        handleSpeak: this.handleSpeak,\n        handleProcessSpeechComplete: this.handleProcessSpeechComplete,\n        handleEvaluationComplete: this.handleEvaluationComplete,\n        incidentWithinIncident: this.incidentWithinIncident,\n        step: step,\n        wait: wait,\n        alarmTwoIncident: alarmTwoIncident,\n\n        //Evaluation Variables\n        initialMatched: { initialMatched },\n        secondaryMatched: { secondaryMatched },\n        processArrivalMatched: { processArrivalMatched },\n        slicerMatched: { slicerMatched },\n        rectoMatched: { rectoMatched },\n        commandingUnitMatched: { commandingUnitMatched },\n        initialSpeech: { initialSpeech },\n        secondarySpeech: { secondarySpeech },\n      };\n    }\n    return (\n      !isLoadingEvolution && (\n        <div>\n          {evaluationPage && (\n            <Evaluation \n              initialSpeech ={initialSpeech}\n              secondarySpeech = {secondarySpeech}\n              initialMatched = { initialMatched }\n              secondaryMatched = { secondaryMatched }\n              processArrivalMatched = { processArrivalMatched }\n              slicerMatched = { slicerMatched }\n              rectoMatched = { rectoMatched }\n              commandingUnitMatched = {commandingUnitMatched}\n              parSpeech = {parSpeech}\n            />\n          )}\n          \n          {speakPhrases.length > 0 && (\n            <TextToSpeech\n              phrases={speakPhrases}\n              voiceId={speakVoice}\n              timeout={speakTimeout}\n              handleSpeechComplete={this.handleSpeechComplete}\n            />\n          )}\n          <SpeechToText\n            isRecording={isRecording}\n            endRecording={endRecording}\n            handleListenComplete={this.handleListenComplete}\n          />\n          {/* {transcript !== '' && <TextToInterpret transcript={transcript} />} */}\n          {(transcript !== '' || step >= 1) && !isSpeaking && (\n            <ProcessSpeech childProps={processSpeechChildProps} />\n          )}\n          {!evaluationPage && videos.map(video => (\n            <video\n              ref={this[video.id]}\n              key={video.id}\n              onPlay={this.handlePlay}\n              onEnded={this.handleEnded(video.next)}\n              onLoadedData={this.handleLoadedData(video.id)}\n              hidden\n            />\n          ))}\n          {!evaluationPage && (\n          <div className='canvas' ref={this.canvasContainer}>\n            {!isPlaying && preloadPercentage === 100 && (\n              <img\n                src={playButton}\n                onClick={this.handlePlayClicked}\n                className='playButton'\n                alt='Play Video'\n              />\n            )}\n            {!isPlaying && preloadPercentage < 100 && (\n              <ProgressBar\n                striped\n                animated\n                now={preloadPercentage}\n                className='progressBar'\n              />\n            )}\n            {scrollText.length > 0 && (\n              <TextCanvas text={scrollText} handleCallback={handleCallback} />\n            )}\n            <canvas\n              ref={this.videoCanvas}\n              width='800'\n              height='450'\n              onClick={this.handlePlayClicked}\n              className='videoCanvas'\n            />\n          </div>\n          )}\n          \n        </div>\n      )\n    );\n  }\n}\n","export function education(evolution, alarms) {\n  const alarm1 = alarms.alarm1.split(',').map(i => i.trim());\n\n  let phrases = [\n    'You have now completed the performance phase of this training evolution. ',\n    'We will now proceed to the education phase. ',\n    'Here are some tactical considerations to contemplate based on fire behavior, building construction, fire prevention codes and fire ground operations. ',\n    'This is not meant to be a complete list. ',\n    'These topics are designed to be thought provoking and create discussion. ',\n    'Initial Radio Report/Primary Size-Up:',\n    `${alarm1[0]} on scene of a ${evolution.size} ${evolution.height} ${\n      evolution.occupancyType\n    } with smoke and fire showing from the ${\n      evolution.witnessedConditions\n    } side. `,\n    'Include in this section: Initial actions, needs, establishing command and a command post location. These are agency specific and these decisions should be based on standard operating procedures, staffing models and response matrices for your organization. ',\n    'Secondary Size-Up:',\n    `This is a typical ${\n      evolution.construction\n    } construction, with entry and egress points on ${\n      evolution.entryEgress\n    } sides. The survivability profile is ${\n      evolution.survivabilityProfile\n    } throughout the structure. `,\n    'Location of the Fire:',\n    `The fire appears to be a ${evolution.fireType} fire on the ${\n      evolution.exhaustPath\n    } side based on smoke & fire conditions. `\n  ];\n\n  if (evolution.flowpath === 'Uni-Directional') {\n    phrases.push(\n      `The flow path is Uni-directional with the exhaust on the ${\n        evolution.exhaustPath\n      } side. Uni-Directional is when the intake is from one opening and the exhaust is from a separate opening. If you control the airflow, you control the fire intensity. By using smoke indicators and fire conditions, control the flow path by managing vertical openings, doors and windows. These actions will limit fire growth, thus allowing longer offensive fire operations. `\n    );\n  } else {\n    phrases.push(\n      `The flow path is Bi-Directional with the exhaust path on the ${\n        evolution.exhaustPath\n      } side. Bi-Directional is where the intake and exhaust is from the same opening. Control the airflow controls the fires intensity. If you control the airflow, you control the fire intensity.  By using smoke indicators and fire conditions, control the flow path by managing vertical openings, doors and windows. These actions will limit fire growth, thus allowing longer offensive fire operations. `\n    );\n  }\n\n  phrases.push(\n    'Identify Flow Path:',\n    'Volume, velocity, density and color are factors that will provide you with the information needed to predict the stability and growth potential of the fire. '\n  );\n\n  if (evolution.smoke === 'Black Laminar') {\n    phrases.push(\n      'Black laminar smoke can indicate a large contents fire with smoke traveling a long distance. The black color can indicate the presence of hydrocarbons and incomplete combustion.  Hydrocarbons are predominately found in finished wood and plastics found in the contents of a structure. Laminar effect can indicate the fire is in the incipient phase and has not reached its full potential or can also suggest smoke has been pushed from a distance. This information is valuable in the go, no-go decision-making process. '\n    );\n  } else if (evolution.smoke === 'Black Turbulent') {\n    phrases.push(\n      'Black turbulent smoke can indicate a large contents fire with the possibility of \"rollover or flashover\" \"hi heat\" involvement. In this case two components: color and velocity provide a great deal of information. The black color can indicate the presence of hydrocarbons and incomplete combustion.  Hydrocarbons are predominately found in finished wood and plastics from the contents of a room. Turbulence or velocity can indicate flashover. This information is valuable in the go, no-go decision-making process. '\n    );\n  } else if (evolution.smoke === 'Gray Laminar') {\n    phrases.push(\n      'Gray laminar smoke can indicate a contents fire with the possibility of smoke traveling a long distance and the fuel maybe outside its optimum flammable range. The fire may also be releasing moisture; it is possibly in the early stages of fire growth. In this case two components: color and velocity provide a great deal of information. The gray color can indicate that fire is off gassing the moisture contained in the fuel, but the fuel is not yet at optimum flammable range. Gray smoke can also indicate the presence of hydrocarbons and incomplete combustion. Laminar effect can indicate the fuel in the incipient phase of fire growth or can also suggest smoke has been pushed from a distance. This information is valuable in the go, no-go decision-making process. '\n    );\n  } else if (evolution.smoke === 'Gray Turbulent') {\n    phrases.push(\n      'Gray turbulent smoke can indicate a large contents fire with the possibility of \"hi heat\" involvement. In this case two components: color and velocity provide a great deal of information. The gray color can indicate the fire is off gassing the moisture contained in the fuel, but the fuel is not yet at optimum flammable range. Gray smoke can also indicate the presence of hydrocarbons and incomplete combustion. Turbulence or velocity can indicate flashover. This information is valuable in the go, no-go decision-making process. '\n    );\n  } else if (evolution.smoke === 'Brown Laminar') {\n    phrases.push(\n      'Brown laminar smoke can indicate fire has reached the structural members. In this case two components: color and velocity provide a great deal of information. The brown color can indicate the presence of sugars.  Sugar is predominately found in the unfinished wood found in the structural components. Laminar effect can indicate the unfinished wood has not reached optimum burning temperature or this effect can also suggest smoke has been pushed from a distance. This information is valuable in the go, no-go decision-making process. '\n    );\n  } else if (evolution.smoke === 'Brown Turbulent') {\n    phrases.push(\n      'Brown turbulent smoke can indicate fire has reached the structural members creating high heat. In this case two components: color and velocity provide a great deal of information. The brown color can indicate the presence of sugars.  Sugar is predominately found in the unfinished wood in structural members. Turbulence or velocity can indicate flashover. This information is valuable in the go, no-go decision-making process. '\n    );\n  }\n\n  phrases.push(\n    'Cool from a safe area:',\n    'Cool the fire area from a protected location until the crews are in place.  This can be, but not limited to exterior water flow. There may be an opportunity to cool from multiple locations, including the interior of the structure. Reduce the heat release rate and decomposition of the contents within the structure by using cooling measures. ',\n    'Extinguish the Fire:',\n    'Based on smoke and fire conditions reset the fire if appropriate or extinguish the fire with a transitional or direct attack. ',\n    'Transitional attack: Cool the fire from a safe location with a 10 to 20 second application of straight stream to the ceiling area. ',\n    'Direct attack: Water applied directly to the seat of the fire.',\n    'Rescue:',\n    'Rescue is an operations requiring removal of human beings from an involved building or other hazardous situation and conveying them to a place of safety. ',\n    'History reflects that firefighters are exposed to the greatest risk of injury and death during primary search and rescue operations. Search efforts must be based on the potential to save lives. ',\n    'Salvage:',\n    'Salvage operations require protecting buildings and contents from preventable damage due to fire, water or other elements. The use of salvage covers and plastic sheeting will reduce the fire loss. In some cases this is an after thought, but should be considered if time and resources exist. ',\n    'Fire Prevention:'\n  );\n\n  if (\n    evolution.category === 'Commercial Modern' ||\n    evolution.category === 'Industrial Modern'\n  ) {\n    phrases.push(\n      'Modern construction utilizes lightweight building materials. This construction style incorporates draft stops, fire partitions, and fire stops to limit fire travel. ',\n      'This lightweight construction uses \"Engineered Lumber\" a term generally used to describe a wood structural member. This structural member is fabricated using bond fibers and materials that are pressed together to form a composite material used for joists and beams. ',\n      'Engineered Lumber is a strong building component under normal conditions, but can lose its integrity rapidly under fire conditions.',\n      'Building Construction:',\n      'In modern buildings, the ceiling presents multiple tactical decision-making options.',\n      'If convected heat is impeded by an enclosure and drywall from the lowest point, upward to the ceiling, the fire is contained as a room & contents fire. ',\n      'Likewise, if the fire is in an unprotected attic, the fire is concealed as well, but will transition to a structure fire rapidly. ',\n      'Higher heat release rate occurs because of the plume affect. Shorter buildings heat quicker, rapidly degrading building materials for advancement to collapse stage quickly. ',\n      'In a fire that goes unimpeded from the floor to the ceiling the temperature will cool as it rises, reducing heat release rate. Conversely, if stopped by a ceiling the heat release rate is higher and grows more rapidly allowing for faster degrading of building materials. '\n    );\n  } else if (\n    evolution.category === 'Commercial Legacy' ||\n    evolution.category === 'Industrial Legacy'\n  ) {\n    phrases.push(\n      'Legacy construction allows for greater stability under fire conditions, allowing for longer, safe offensive operations.  These buildings may create safety issues for firefighters due to the limited access. This can create issues of occupants interfering with firefighting operations. ',\n      'Building Construction:',\n      'These buildings hold up well under fire conditions, but it is critical that firefighters not feel a false sense of security, as these buildings are often poorly maintained.',\n      'The ceiling presents multiple tactical decision-making options. If convected heat is impeded from the lowest point of the fire extension upward to the ceiling, protected by enclosure and drywall, the fire is contained as a contents fire. ',\n      'Likewise, if the fire is in an unprotected attic, the fire is concealed as well as higher HRR because the plume affected shorter, buildings heat quicker, degrading building materials for to collapse stage more rapidly. ',\n      'Limited access and egress based on design and construction features. Typically, limited entrance and exit from the occupied structure. These structures are not sealed and provide for natural oxygen exchange, allowing for rapid fire growth and travel. A fire contained to a room and contents shouldn’t weaken the roof structure as it is protected for a theoretical hour rating. ',\n      'Void space in older construction is prevalent.',\n      'Lidded Buildings, defined as covered ceilings creates compartmenting of the structure and provides protection to the structural members. You will primarily find room and content fires if the compartment is in tact. Versus un-lidded structures, defined as open to the roof. These un-lidded structures are susceptible to structure fires because of its access to unprotected structural members. In either case it is imperative communications occur between interior divisions and ventilation group. Historical collapses are more rapid in lidded structures due to increase heat release rate. '\n    );\n  } else if (evolution.category === 'Multi Family Legacy') {\n    phrases.push(\n      'Legacy construction homes were built using solid wood. Solid wood provides greater stability under fire conditions for longer offensive operations. Solid wood burns slower maintaining its strength and form. Reducing the opportunity and time required to enter the collapse stage.',\n      'With the renewed emphasis on the topic of fire behavior and building construction, realizing what makes up the environment we work in, is and has always been, important to firefighter safety. Fireground command strategy development requires the evaluation of general styles of construction and the building materials used. This critical information is essential to achieve better fireground decisions. ',\n      'Building Construction:',\n      'Many buildings are built with a static facade masking the buildings construction type. Roof structures from the legacy era have collar beam and ridge boards often allowing for lofts in the upper levels. These lofts are identifiable by windows in the gable roof area and the dormer style windows on the pitch. This construction type usually consists of raised foundation and/or basement areas. These conditions present a collapse hazard and must be sounded to insure firefighter safety and survival. ',\n      'Based on design and construction features, structure is not sealed and provides for natural oxygen exchange allowing for rapid fire growth and travel. If the fire is concealed a higher heat release rate occurs because the plume effect is shorter. Which causes the building to heat quicker degrading building materials to the collapse stage more rapidly. ',\n      'Some of the more common failures associated with this structure could be:  roof collapse, floor collapse, stair collapse, interior wall collapse, and masonry veneer failure. '\n    );\n  } else if (evolution.category === 'Single Family Legacy') {\n    phrases.push(\n      'Conventional construction of single-family dwellings allows for greater stability under fire conditions, allowing for longer, safe offensive operations. These buildings hold up well under fire conditions, but it is critical that firefighters not feel a false sense of security. ',\n      'Building Construction:',\n      'The ceiling presents multiple tactical decision-making options. If convected heat is impeded from the lowest point of the fire extension upward to the ceiling, protected by an enclosure and drywall, the fire is contained as a contents fire.',\n      'Based on design and construction features this type of structure is not sealed and provides for natural oxygen exchange allowing for rapid fire growth and travel. If the fire is concealed a higher heat release rate occurs because the plume effect is shorter. Which causes the building to heat quicker degrading building materials to the collapse stage more rapidly. A fire contained to a room and contents shouldn’t weaken the roof structure as it is protected for a theoretical hour rating. ',\n      'Some of the more common failures associated with this structure could be: roof collapse, floor collapse, stair collapse, interior wall collapse and masonry veneer failure.'\n    );\n  } else if (evolution.category === 'Multi Family Modern') {\n    phrases.push(\n      'For this training program there are at least three descriptors to describe multi-family modern style structures.  These descriptors are garden style apartments, center hall style apartments and townhomes. A garden style apartment is any apartment that has entry or egress directly to the exterior of the building.  A center hall style apartment is any apartment that exits into a hall way as its entry and exit. A townhome is a multi story apartment with its entry and exit on the ground floor. ',\n      'Modern construction materials burn faster than older construction materials. Older buildings were built using solid wood.  Solid wood structural members will burn slower taking longer to degrade. Newer buildings are built with engineered lumber which are wood fibers glued together. This makes the wood lightweight and strong under normal conditions but allows it to burn quickly and collapse almost instantaneously. Not only does the engineered wood burn more rapidly but modern furniture and coverings which are made out of synthetic materials also are adding to the rate of spread. ',\n      'Building Construction:',\n      'Lightweight construction uses “Engineered Lumber” a term generally used to describe a wood structural member that is fabricated using bond fibers and materials that is usually put together as a composite joist or beam. ',\n      'In modern buildings the ceiling presents multiple tactical decision-making options. ',\n      'If convected heat is impeded by an enclosure and drywall from the lowest point, upward to the ceiling, the fire is contained as a room & contents fire. ',\n      'Likewise, if the fire is in an unprotected attic, the fire is concealed as well, but will transition to a structure fire rapidly. ',\n      'Higher heat release rate occurs because of the plume affect. Shorter buildings heat quicker, rapidly degrading building materials for advancement to collapse stage quickly. ',\n      'In a fire that goes unimpeded from the floor to the ceiling the temperature will cool as it rises, reducing heat release rate. Conversely, if stopped by a ceiling the heat release rate is higher and grows more rapidly allowing for faster degrading of building materials. ',\n      'Modern construction materials make assembling buildings quicker and less costly, but that also means it will take less time for a building to become completely involved in flames. Fire protection systems help limit the spread of fire allowing occupants time to safely evacuate the involved structure. '\n    );\n  } else if (evolution.category === 'Single Family Modern') {\n    phrases.push(\n      'Engine company operations are built upon 8 decades of time-tested and experience-proven strategies and tactics. But such tactics are no longer sufficient for today’s fires.',\n      'Today, engine companies must also understand modern fire behavior, rate of heat release and the growth stages of fire. They must constantly evaluate how a structure will \"perform\" during fire suppression operations. ',\n      'Our buildings have changed; differences include the structural components, the degree of compartmentation, the characteristics of materials and the magnitude of fire loading. Engineered structural systems have created large compartment areas, and modern furnishings made from synthetics create extreme fire behavior, compromising structural stability in shorter time periods. This fire behavior and the ever-changing construction scheme decrease the time that safe offensive operations can take place. ',\n      'Building Construction:',\n      'Modern construction materials burn faster than dimensional lumber. Older buildings were built using solid wood, while newer buildings are built with engineered lumber beams, which wood fibers are joined together. This makes the wood lighter and stronger, this is a trade off of allowing it to burn more rapidly and increase the likelihood of collapse, whereas, solid wood would burn slower retaining its strength and form longer but is more expensive. Furniture and coverings which are made out of synthetic materials increase rate of spread. Because modern construction and furnishings increase flammability it is essential that the buildings fire protection system is properly installed and up-to-date with all building codes and standards. ',\n      'The rules for structural fire fighting are changing. The new rules must align traditional tactics with the new science. They must address several areas, including flow rates, extreme fire behavior, and tactical deployment. '\n    );\n  }\n\n  phrases.push(\n    'You have now completed the education phase of this training evolution. We will now proceed to the evaluation phase. '\n  );\n\n  return phrases;\n}\n","import React from 'react';\nimport './NotFound.css';\n\nexport default () => (\n  <div className='NotFound'>\n    <h3>Sorry, page not found!</h3>\n  </div>\n);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport AppliedRoute from './components/AppliedRoute/AppliedRoute';\nimport MemberRoute from './components/MemberRouter/MemberRoute';\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute';\nimport UnauthenticatedRoute from './components/UnauthenticatedRoute/UnauthenticatedRoute';\nimport Home from './containers/Home/Home';\nimport About from './containers/About/About';\nimport Contact from './containers/Contact/Contact';\nimport Register from './containers/Register/Register';\nimport Login from './containers/Login/Login';\nimport Demo from './containers/Demo/Demo';\nimport Profile from './containers/Profile/Profile';\nimport Dashboard from './containers/Dashboard/Dashboard';\nimport Evolution from './components/Evolution/Evolution';\nimport NotFound from './containers/NotFound/NotFound';\n\nexport default ({ childProps }) => (\n  <Switch>\n    <AppliedRoute path='/' exact component={Home} props={childProps} />\n    <AppliedRoute\n      path='/contact'\n      exact\n      component={Contact}\n      props={childProps}\n    />\n    <UnauthenticatedRoute\n      path='/about'\n      exact\n      component={About}\n      props={childProps}\n    />\n    <UnauthenticatedRoute\n      path='/register'\n      exact\n      component={Register}\n      props={childProps}\n    />\n    <UnauthenticatedRoute\n      path='/login'\n      exact\n      component={Login}\n      props={childProps}\n    />\n    <AuthenticatedRoute\n      path='/profile'\n      exact\n      component={Profile}\n      props={childProps}\n    />\n    <AuthenticatedRoute\n      path='/demo'\n      exact\n      component={Demo}\n      props={childProps}\n    />\n    <MemberRoute\n      path='/dashboard'\n      exact\n      component={Dashboard}\n      props={childProps}\n    />\n    <MemberRoute\n      path='/evolutions/:id'\n      component={Evolution}\n      props={childProps}\n    />\n    <Route component={NotFound} />\n  </Switch>\n);\n","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport logo from '../../../logo.png';\n\nexport default class Navigation extends Component {\n  render() {\n    return (\n      <Navbar bg='dark' variant='dark' collapseOnSelect sticky='top'>\n        <Navbar.Brand>\n          <Link to='/'>\n            <img\n              src={logo}\n              width='60'\n              height='60'\n              className='d-inline-block align-top'\n              alt='Command Tactical Training'\n            />\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls='navbar-links' />\n        <Navbar.Collapse id='navbar-links'>\n          <Nav className='mr-auto'>\n            {this.props.childProps.memberType === 'member' && (\n              <Fragment>\n                <Nav.Item>\n                  <LinkContainer to='/dashboard'>\n                    <Nav.Link>Dashboard</Nav.Link>\n                  </LinkContainer>\n                </Nav.Item>\n              </Fragment>\n            )}\n            {this.props.childProps.isAuthenticated &&\n              this.props.childProps.memberType === 'demo' && (\n                <Fragment>\n                  <Nav.Item>\n                    <LinkContainer to='/demo'>\n                      <Nav.Link>Demo</Nav.Link>\n                    </LinkContainer>\n                  </Nav.Item>\n                </Fragment>\n              )}\n            {!this.props.childProps.isAuthenticated && (\n              <Fragment>\n                <Nav.Item>\n                  <LinkContainer to='/about'>\n                    <Nav.Link>About</Nav.Link>\n                  </LinkContainer>\n                </Nav.Item>\n              </Fragment>\n            )}\n            <Nav.Item>\n              <LinkContainer to='/contact'>\n                <Nav.Link>Contact</Nav.Link>\n              </LinkContainer>\n            </Nav.Item>\n          </Nav>\n          <Nav className='justify-content-end'>\n            {this.props.childProps.isAuthenticated ? (\n              <Fragment>\n                <Nav.Item>\n                  <LinkContainer to='/profile'>\n                    <Nav.Link>Profile</Nav.Link>\n                  </LinkContainer>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link onClick={this.props.childProps.handleLogout}>\n                    Logout\n                  </Nav.Link>\n                </Nav.Item>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Nav.Item>\n                  <LinkContainer to='/register'>\n                    <Nav.Link>Register</Nav.Link>\n                  </LinkContainer>\n                </Nav.Item>\n                <Nav.Item>\n                  <LinkContainer to='/login'>\n                    <Nav.Link>Login</Nav.Link>\n                  </LinkContainer>\n                </Nav.Item>\n              </Fragment>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Routes from '../../Routes';\nimport { Auth, API } from 'aws-amplify';\nimport Navigation from './Navigation/Navigation';\nimport Container from 'react-bootstrap/Container';\nimport './App.css';\n\nclass App extends Component {\n  _isMounted = false;\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    memberType: 'guest'\n  };\n\n  async componentDidMount() {\n    this._isMounted = true;\n\n    try {\n      await Auth.currentSession();\n      this.userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== 'No current user') {\n        //alert(e);\n      }\n    }\n\n    try {\n      const billing = await this.getBilling();\n      if (billing) {\n        this.setMemberType(billing.canceled);\n      }\n    } catch (e) {\n      if (e.message !== 'Request failed with status code 500') {\n        //alert(e);\n      }\n    }\n\n    if (this._isMounted) {\n      this.setState({ isAuthenticating: false });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  getBilling() {\n    return API.get('comtac', '/billing/subscription');\n  }\n\n  setMemberType = canceled => {\n    if (!canceled) {\n      this.setState({ memberType: 'member' });\n    }\n  };\n\n  userHasAuthenticated = authenticated => {\n    this.setState({ isAuthenticated: authenticated, memberType: 'demo' });\n  };\n\n  handleLogout = async event => {\n    await Auth.signOut();\n    this.userHasAuthenticated(false);\n    this.props.history.push('/login');\n  };\n\n  render() {\n    const { isAuthenticated, isAuthenticating, memberType } = this.state;\n    const childProps = {\n      isAuthenticated: isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated,\n      memberType: memberType,\n      setMemberType: this.setMemberType,\n      handleLogout: this.handleLogout\n    };\n\n    return (\n      !isAuthenticating && (\n        <div className='App'>\n          <Navigation childProps={childProps} />\n          <Container className='body'>\n            <Routes childProps={childProps} />\n          </Container>\n        </div>\n      )\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n//import axios from 'axios';\nimport Amplify from 'aws-amplify';\nimport { AmazonAIPredictionsProvider } from '@aws-amplify/predictions';\nimport config from './config';\n\n/*axios.interceptors.request.use(\n  request => {\n    console.log(request);\n    // Edit request config\n    return request;\n  },\n  error => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  response => {\n    console.log(response);\n    return response;\n  },\n  error => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);*/\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  predictions: {\n    convert: {\n      speechGenerator: {\n        region: config.polly.REGION,\n        proxy: config.polly.PROXY,\n        defaults: {\n          VoiceId: config.polly.DEFAULT_VOICE_ID,\n          LanguageCode: config.polly.LANGUAGE_CODE\n        }\n      },\n      transcription: {\n        region: config.transcribe.REGION,\n        proxy: config.transcribe.PROXY,\n        defaults: {\n          language: config.transcribe.LANGUAGE_CODE\n        }\n      }\n    },\n    interpret: {\n      interpretText: {\n        region: config.comprehend.REGION,\n        proxy: config.comprehend.PROXY,\n        defaults: {\n          type: config.comprehend.TYPE\n        }\n      }\n    }\n  },\n  /*Storage: {\n    AWSS3: {\n      region: config.s3.REGION,\n      bucket: config.s3.BUCKET\n    }\n  },*/\n  API: {\n    endpoints: [\n      {\n        name: 'comtac',\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      }\n    ]\n  }\n});\nAmplify.addPluggable(new AmazonAIPredictionsProvider());\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}